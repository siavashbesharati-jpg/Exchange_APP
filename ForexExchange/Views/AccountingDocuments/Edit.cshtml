@model ForexExchange.Models.AccountingDocument

@{
    ViewData["Title"] = $"ویرایش سند حسابداری #{Model.Id}";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">ویرایش سند حسابداری</h2>
            <div class="text-muted small">سند #@Model.Id</div>
        </div>
        <div>
            <a asp-action="Details" asp-route-id="@Model.Id" class="btn btn-info me-2">
                <i class="fas fa-eye"></i> مشاهده جزئیات
            </a>
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> بازگشت به لیست
            </a>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-10 mx-auto">
            <form asp-action="Edit" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                @* Custom validation summary excluding documentFile errors *@
                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger" role="alert">
                        <h6 class="alert-heading"><i class="fas fa-exclamation-triangle"></i> خطاهای اعتبارسنجی:</h6>
                        <ul class="mb-0">
                            @foreach (var modelState in ViewData.ModelState)
                            {
                                @if (modelState.Key != "documentFile")
                                {
                                    @foreach (var error in modelState.Value.Errors)
                                    {
                                        <li>@error.ErrorMessage</li>
                                    }
                                }
                            }
                        </ul>
                    </div>
                }
                
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="CreatedAt" />

                <div class="card">
                    <div class="card-header">
                        <h5 class="card-title mb-0">اطلاعات سند حسابداری</h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Type" class="form-label">نوع سند <span
                                            class="text-danger">*</span></label>
                                    <select asp-for="Type" class="form-select"
                                        asp-items="Html.GetEnumSelectList<DocumentType>()">
                                        <option value="">انتخاب کنید...</option>
                                    </select>
                                    <span asp-validation-for="Type" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Title" class="form-label">عنوان سند <span
                                            class="text-danger">*</span></label>
                                    <input asp-for="Title" class="form-control" />
                                    <span asp-validation-for="Title" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="Amount" class="form-label"> مقدار  <span
                                            class="text-danger">*</span></label>
                                    <input asp-for="Amount" class="form-control" type="number" step="0.01" />
                                    <span asp-validation-for="Amount" class="text-danger"></span>
                                    <div class="form-text">مقادیر منفی برای تراکنش‌های برگشتی مجاز است</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CurrencyCode" class="form-label">واحد پول <span
                                            class="text-danger">*</span></label>
                                    <select asp-for="CurrencyCode" class="form-select">
                                        <option value="">انتخاب کنید...</option>
                                        @foreach (var currency in ViewData["Currencies"] as
                                                                                IEnumerable<ForexExchange.Models.Currency>)
                                        {
                                            <option value="@currency.Code">@currency.Name (@currency.Code)</option>
                                        }
                                    </select>
                                    <span asp-validation-for="CurrencyCode" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="DocumentDate" class="form-label">تاریخ سند <span
                                            class="text-danger">*</span></label>
                                    <input asp-for="DocumentDate" class="form-control" type="datetime-local" />
                                    <span asp-validation-for="DocumentDate" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="ReferenceNumber" class="form-label">شماره تراکنش</label>
                                    <input asp-for="ReferenceNumber" class="form-control" />
                                    <span asp-validation-for="ReferenceNumber" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="CustomerId" class="form-label">مشتری <span
                                            class="text-danger">*</span></label>
                                    <select asp-for="CustomerId" class="form-select" required>
                                        <option value="">انتخاب مشتری...</option>
                                        @if (ViewData["Customers"] is IEnumerable<ForexExchange.Models.Customer>
                                                                                customers)
                                        {
                                            @foreach (var customer in customers)
                                            {
                                                <option value="@customer.Id">@customer.FullName (@customer.PhoneNumber)</option>
                                            }
                                        }
                                    </select>
                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label asp-for="BankAccountId" class="form-label">حساب بانکی</label>
                                    <select asp-for="BankAccountId" class="form-select">
                                        <option value="">انتخاب حساب بانکی (اختیاری)...</option>
                                        @if (ViewData["BankAccounts"] is IEnumerable<ForexExchange.Models.BankAccount>
                                                                                bankAccounts)
                                        {
                                            @foreach (var account in bankAccounts)
                                            {
                                                <option value="@account.Id">@account.AccountNumber - @account.BankName</option>
                                            }
                                        }
                                    </select>
                                    <div id="currency-warning" class="alert alert-warning mt-2" style="display: none;">
                                        <small><i class="fas fa-exclamation-triangle"></i> ارز سند باید با ارز حساب
                                            بانکی انتخاب شده مطابقت داشته باشد.</small>
                                    </div>
                                    <span asp-validation-for="BankAccountId" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label">فایل جدید (اختیاری)</label>
                                    <div class="input-group">
                                        <input type="file" name="documentFile" id="documentFile" class="form-control"
                                            accept=".pdf,.jpg,.jpeg,.png,.doc,.docx" />
                                        <button type="button" id="ocrButton" class="btn btn-outline-info" style="display: none;" onclick="processOcr()">
                                            <i class="fas fa-eye"></i> OCR
                                        </button>
                                    </div>
                                    <div class="form-text">
                                        فرمت‌های مجاز: PDF, JPG, PNG, DOC, DOCX (حداکثر ۱۰ مگابایت)
                                    </div>
                                    @if (!string.IsNullOrEmpty(Model.FileName))
                                    {
                                        <div class="mt-2">
                                            <small class="text-muted">فایل فعلی: @Model.FileName</small>
                                        </div>
                                    }
                                    
                                    <!-- OCR Results -->
                                    <div id="ocrResults" class="mt-3" style="display: none;">
                                        <div class="alert alert-info">
                                            <h6><i class="fas fa-robot"></i> نتایج OCR:</h6>
                                            <div id="ocrContent"></div>
                                            <div class="mt-2">
                                                <button type="button" class="btn btn-sm btn-success" onclick="applyOcrResults()">
                                                    <i class="fas fa-check"></i> اعمال نتایج
                                                </button>
                                                <button type="button" class="btn btn-sm btn-secondary" onclick="hideOcrResults()">
                                                    <i class="fas fa-times"></i> بستن
                                                </button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Description" class="form-label">توضیحات</label>
                            <textarea asp-for="Description" class="form-control" rows="3"></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>

                        <div class="mb-3">
                            <div class="form-check">
                                <input type="hidden" asp-for="IsVerified" class="form-check-input" />
                            </div>
                        </div>
                    </div>
                    <div class="card-footer">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save"></i> ذخیره تغییرات
                        </button>
                        <a asp-action="Index" class="btn btn-secondary ms-2">
                            <i class="fas fa-times"></i> انصراف
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Bank account currency validation
        document.getElementById('BankAccountId').addEventListener('change', function () {
            const bankAccountSelect = this;
            const currencySelect = document.getElementById('CurrencyCode');

            if (bankAccountSelect.value) {
                // Show warning that currency will be validated on server
                const warningDiv = document.getElementById('currency-warning');
                if (warningDiv) {
                    warningDiv.style.display = 'block';
                }
            } else {
                const warningDiv = document.getElementById('currency-warning');
                if (warningDiv) {
                    warningDiv.style.display = 'none';
                }
            }
        });

        // File validation
        document.querySelector('input[type="file"]').addEventListener('change', function (e) {
            const file = e.target.files[0];
            const ocrButton = document.getElementById('ocrButton');
            
            if (file) {
                const maxSize = 10 * 1024 * 1024; // 10MB
                const allowedTypes = ['application/pdf', 'image/jpeg', 'image/jpg', 'image/png', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'];

                if (file.size > maxSize) {
                    alert('حجم فایل نمی‌تواند بیشتر از ۱۰ مگابایت باشد.');
                    e.target.value = '';
                    ocrButton.style.display = 'none';
                    return;
                }

                if (!allowedTypes.includes(file.type)) {
                    alert('فرمت فایل مجاز نیست. فرمت‌های مجاز: PDF, JPG, PNG, DOC, DOCX');
                    e.target.value = '';
                    ocrButton.style.display = 'none';
                    return;
                }

                // Show OCR button only for images
                const imageTypes = ['image/jpeg', 'image/jpg', 'image/png'];
                if (imageTypes.includes(file.type)) {
                    ocrButton.style.display = 'block';
                } else {
                    ocrButton.style.display = 'none';
                }
            } else {
                ocrButton.style.display = 'none';
            }
        });

        // OCR Processing Functions
        let ocrData = {};

        function processOcr() {
            const fileInput = document.getElementById('documentFile');
            const file = fileInput.files[0];
            
            if (!file) {
                alert('لطفاً ابتدا تصویر را انتخاب کنید.');
                return;
            }

            // Show loading
            const ocrButton = document.getElementById('ocrButton');
            const originalText = ocrButton.innerHTML;
            ocrButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> در حال پردازش...';
            ocrButton.disabled = true;

            // Create FormData
            const formData = new FormData();
            formData.append('imageFile', file);
            formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

            // Send to server
            fetch('@Url.Action("ProcessOcr", "AccountingDocuments")', {
                method: 'POST',
                body: formData
            })
            .then(response => response.json())
            .then(data => {
                ocrButton.innerHTML = originalText;
                ocrButton.disabled = false;

                if (data.success) {
                    ocrData = data.data;
                    showOcrResults(data.data);
                } else {
                    alert('خطا در OCR: ' + (data.message || 'خطای ناشناخته'));
                }
            })
            .catch(error => {
                ocrButton.innerHTML = originalText;
                ocrButton.disabled = false;
                alert('خطا در ارتباط با سرور: ' + error.message);
            });
        }

        function showOcrResults(data) {
            const resultsDiv = document.getElementById('ocrResults');
            const contentDiv = document.getElementById('ocrContent');
            
            let content = '<div class="row">';
            
            if (data.amount) {
                content += `<div class="col-md-4 mb-2"><strong>مبلغ:</strong> ${data.amount}</div>`;
            }
            if (data.referenceId) {
                content += `<div class="col-md-4 mb-2"><strong>شماره تراکنش:</strong> ${data.referenceId}</div>`;
            }
            if (data.date) {
                content += `<div class="col-md-4 mb-2"><strong>تاریخ:</strong> ${data.date}</div>`;
            }
            
            content += '</div>';
            
            contentDiv.innerHTML = content;
            resultsDiv.style.display = 'block';
        }

        function applyOcrResults() {
            const ocrContent = document.getElementById('ocrContent');
            const data = window.lastOcrResults;
            
            if (!data) return;
            
            if (data.amount) {
                // If amount is in IRR and has 8+ digits, convert to Toman by removing one zero
                let amountValue = data.amount.toString().replace(/[^\d]/g, '');
                if (amountValue.length >= 8) {
                    amountValue = amountValue.slice(0, -1); // Remove last digit (divide by 10)
                }
                const amountInput = document.querySelector('input[name="Amount"]');
                if (amountInput) {
                    amountInput.value = amountValue;
                }
            }
            
            if (data.referenceId) {
                const referenceInput = document.querySelector('input[name="ReferenceNumber"]');
                if (referenceInput) {
                    referenceInput.value = data.referenceId;
                }
            }
            
            if (data.date) {
                // Convert Shamsi date to Miladi
                const miladiDate = convertShamsiToMiladi(data.date);
                if (miladiDate) {
                    const dateInput = document.querySelector('input[name="DocumentDate"]');
                    if (dateInput) {
                        dateInput.value = miladiDate;
                    }
                }
            }
            
            // Hide OCR results after applying
            hideOcrResults();
            alert('نتایج OCR اعمال شد!');
        }
        
        function convertShamsiToMiladi(shamsiDate) {
            try {
                // Parse Shamsi date (format: YYYY/MM/DD)
                const parts = shamsiDate.split('/');
                if (parts.length !== 3) return null;
                
                const shamsiYear = parseInt(parts[0]);
                const shamsiMonth = parseInt(parts[1]);
                const shamsiDay = parseInt(parts[2]);
                
                // Simple conversion (approximate)
                // This is a basic conversion - for production use a proper Persian calendar library
                const miladiYear = shamsiYear + 621;
                let miladiMonth = shamsiMonth + 3;
                let miladiDay = shamsiDay + 21;
                
                // Handle month overflow
                if (miladiMonth > 12) {
                    miladiMonth -= 12;
                    miladiYear++;
                }
                
                // Handle day overflow (simplified)
                if (miladiDay > 30) {
                    miladiDay -= 30;
                    miladiMonth++;
                    if (miladiMonth > 12) {
                        miladiMonth = 1;
                        miladiYear++;
                    }
                }
                
                // Format as YYYY-MM-DD for HTML date input
                return `${miladiYear}-${miladiMonth.toString().padStart(2, '0')}-${miladiDay.toString().padStart(2, '0')}`;
            } catch (e) {
                console.error('Error converting Shamsi to Miladi:', e);
                return null;
            }
        }

        function hideOcrResults() {
            document.getElementById('ocrResults').style.display = 'none';
        }
        });
    </script>
}
