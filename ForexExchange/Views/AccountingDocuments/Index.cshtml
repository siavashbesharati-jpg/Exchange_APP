@model IEnumerable<ForexExchange.Models.AccountingDocument>

@{
    ViewData["Title"] = "مدیریت اسناد حسابداری";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">مدیریت اسناد حسابداری</h2>
            <div class="text-muted small">فهرست اسناد حسابداری ثبت‌شده در سیستم</div>
        </div>
        <a asp-action="Upload" class="btn btn-primary">
            <i class="fas fa-plus"></i> ثبت سند جدید
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }

    <div class="card mb-3">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-2 align-items-center">
                <div class="col-sm-6 col-md-4">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="جستجو با شناسه سند...">
                    </div>
                </div>
                <div class="col-sm-6 col-md-8 text-end">
                    <input type="hidden" name="currentFilter" value="@ViewData["CurrentFilter"]" />
                    <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
                    <input type="hidden" name="typeFilter" value="@ViewData["TypeFilter"]" />
                    <input type="hidden" name="statusFilter" value="@ViewData["StatusFilter"]" />
                    <input type="hidden" name="customerFilter" value="@ViewData["CustomerFilter"]" />
                    <button type="submit" class="btn btn-primary">جستجو</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">حذف فیلترها</a>
                </div>
            </form>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">لیست اسناد حسابداری</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">#</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">عنوان سند</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">نوع سند</a>
                                </th>
                                
                                
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["CustomerSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">مشتری</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">مبلغ</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]">تاریخ سند</a>
                                </th>
                                <th>وضعیت</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>#@item.Id</td>
                                    <td>
                                        <strong>@item.Title</strong>
                                        @if (!string.IsNullOrEmpty(item.ReferenceNumber))
                                        {
                                            <br><small class="text-muted">مرجع: @item.ReferenceNumber</small>
                                        }
                                    </td>
                                    <td>
                                        @switch (item.Type)
                                        {
                                            case ForexExchange.Models.DocumentType.Cash:
                                                <span class="badge bg-success">نقدی</span>
                                                break;
                                         
                                            case ForexExchange.Models.DocumentType.Havala:
                                                <span class="badge bg-info">حواله</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">@item.Type</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        @if (item.PayerType == ForexExchange.Models.PayerType.Customer && item.PayerCustomer != null)
                                        {
                                            <a asp-controller="Customers" asp-action="Profile" asp-route-id="@item.PayerCustomerId" class="text-decoration-none">
                                                @item.PayerCustomer.FullName
                                            </a>
                                            <br><small class="text-muted">پرداخت کرده است</small>
                                        }
                                        else if (item.ReceiverType == ForexExchange.Models.ReceiverType.Customer && item.ReceiverCustomer != null)
                                        {
                                            <a asp-controller="Customers" asp-action="Profile" asp-route-id="@item.ReceiverCustomerId" class="text-decoration-none">
                                                @item.ReceiverCustomer.FullName
                                            </a>
                                            <br><small class="text-muted">دریافت کرده است</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">مشتری نامشخص</span>
                                        }
                                    </td>
                                 
                                    <td>
                                        <strong>@(item.CurrencyCode == "IRR" ? item.Amount.ToString("N0") : item.Amount.ToString("N2")) @item.CurrencyCode</strong>
                                    </td>
                                    <td>@item.DocumentDate.ToPersianDateTextify()</td>
                                    <td>
                                        @if (item.IsVerified)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check"></i> تأیید شده
                                            </span>
                                            @if (item.VerifiedAt.HasValue)
                                            {
                                                <br><small class="text-muted">@item.VerifiedAt.Value.ToPersianDateTextify()</small>
                                            }
                                        }
                                        else
                                        {
                                            <span class="badge bg-warning">
                                                <i class="fas fa-clock"></i> در انتظار تأیید
                                            </span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="جزئیات">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                           
                                            @if (!item.IsVerified)
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-success" title="تأیید سند"
                                                        onclick="confirmDocument(@item.Id)">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            }
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger" title="حذف سند (ادمین)"
                                                        onclick="confirmDocumentDelete(@item.Id, '@item.Title', @item.IsVerified.ToString().ToLower())">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <div class="mb-3"><i class="fas fa-file-invoice fa-3x text-muted"></i></div>
                <h5 class="text-muted">هیچ سند حسابداری یافت نشد</h5>
                <p class="text-muted">برای شروع، اولین سند حسابداری خود را ثبت  کنید.</p>
                <a asp-action="Upload" class="btn btn-primary">
                    <i class="fas fa-plus"></i> ثبت  اولین سند
                </a>
            </div>
        </div>
    }
</div>

@* Hidden form for anti-forgery token *@
<form id="hiddenTokenForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <script>
        function confirmDocument(documentId) {
            if (confirm('آیا از تأیید این سند حسابداری اطمینان دارید؟ این عملیات ترازها را بروزرسانی خواهد کرد.')) {
                // Create and submit confirmation form
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("Confirm", "AccountingDocuments")/' + documentId;
                
                // Get anti-forgery token from hidden form
                var hiddenToken = document.querySelector('#hiddenTokenForm input[name="__RequestVerificationToken"]');
                if (hiddenToken) {
                    var tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = hiddenToken.value;
                    form.appendChild(tokenInput);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }

        function confirmDocumentDelete(documentId, documentTitle, isVerified) {
            var verificationMessage = isVerified ? 
                'این سند تأیید شده است و تأثیرات مالی آن برگردانده خواهد شد.' : 
                'این سند هنوز تأیید نشده است.';
            
            if (confirm(`آیا از حذف سند #${documentId} (${documentTitle}) اطمینان دارید؟\n\n${verificationMessage}\n\nاین عملیات غیرقابل بازگشت است.`)) {
                // Create and submit delete form
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("Delete", "AccountingDocuments")/' + documentId;
                
                // Get anti-forgery token from hidden form
                var hiddenToken = document.querySelector('#hiddenTokenForm input[name="__RequestVerificationToken"]');
                if (hiddenToken) {
                    var tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = hiddenToken.value;
                    form.appendChild(tokenInput);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
    </script>
}
