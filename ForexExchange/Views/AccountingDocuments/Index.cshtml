@model IList<ForexExchange.Models.AccountingDocument>

@{
    ViewData["Title"] = "مدیریت اسناد حسابداری";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="mb-1">مدیریت اسناد حسابداری</h2>
            <div class="text-muted small">فهرست اسناد حسابداری ثبت‌شده در سیستم</div>
        </div>
        <a asp-action="Upload" class="btn btn-primary">
            <i class="fas fa-plus"></i> ثبت سند جدید
        </a>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }

    <div class="card mb-3">
        <div class="card-body">
            <form asp-action="Index" method="get" class="row g-2 align-items-center">
                <div class="col-sm-6 col-md-3">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-search"></i></span>
                        <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" class="form-control" placeholder="جستجو با شناسه سند...">
                    </div>
                </div>
                <div class="col-sm-6 col-md-2">
                    <div class="input-group">
                        <span class="input-group-text"><i class="fas fa-hashtag"></i></span>
                        <input type="text" name="ReferenceNumber" value="@ViewData["ReferenceFilter"]" class="form-control" placeholder="شناسه رهگیری...">
                    </div>
                </div>
                <div class="col-sm-6 col-md-2">
                    <select name="customerFilter" class="form-select">
                        <option value="">همه مشتری‌ها</option>
                        @if (ViewBag.CustomersList != null)
                        {
                            @foreach (var customer in ViewBag.CustomersList)
                            {
                                <option value="@customer.Value" selected="@(customer.Value == ViewData["CustomerFilter"]?.ToString())">
                                    @customer.Text
                                </option>
                            }
                        }
                    </select>
                </div>
                <div class="col-sm-6 col-md-2">
                    <select name="statusFilter" class="form-select">
                        <option value="">همه وضعیت‌ها</option>
                        <option value="false" selected="@(ViewData["StatusFilter"]?.ToString() == "False")">در انتظار تأیید</option>
                        <option value="true" selected="@(ViewData["StatusFilter"]?.ToString() == "True")">تأیید شده</option>
                    </select>
                </div>
                <div class="col-sm-12 col-md-3 text-end">
                    <input type="hidden" name="currentFilter" value="@ViewData["CurrentFilter"]" />
                    <input type="hidden" name="sortOrder" value="@ViewData["CurrentSort"]" />
                    <input type="hidden" name="typeFilter" value="@ViewData["TypeFilter"]" />
                    <button type="submit" class="btn btn-primary me-2">جستجو</button>
                    <a asp-action="Index" class="btn btn-outline-secondary">حذف فیلترها</a>
                </div>
            </form>
        </div>
    </div>

    @if (Model.Any())
    {
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <div>
                    <h5 class="card-title mb-0">لیست اسناد حسابداری</h5>
                    <small class="text-muted">
                        @ViewBag.TotalItems سند حسابداری یافت شد
                        @if (ViewBag.TotalPages > 1)
                        {
                            <span> - صفحه @ViewBag.CurrentPage از @ViewBag.TotalPages</span>
                        }
                    </small>
                </div>
                @if (ViewBag.TotalPages > 1)
                {
                    <small class="text-muted">
                        @ViewBag.PageSize مورد در هر صفحه
                    </small>
                }
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover align-middle">
                        <thead class="table-dark">
                            <tr>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">#</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">عنوان سند</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["TypeSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">نوع سند</a>
                                </th>
                                
                                
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["CustomerSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">مشتری</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["AmountSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">مبلغ</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">تاریخ سند</a>
                                </th>
                                <th>
                                    <a class="text-white text-decoration-none" asp-action="Index" asp-route-sortOrder="@ViewData["StatusSortParm"]"
                                       asp-route-currentFilter="@ViewData["CurrentFilter"]" asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                       asp-route-typeFilter="@ViewData["TypeFilter"]" asp-route-statusFilter="@ViewData["StatusFilter"]"
                                       asp-route-referenceNumber="@ViewData["ReferenceFilter"]" asp-route-page="1">وضعیت</a>
                                </th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>#@item.Id</td>
                                    <td>
                                        <strong>@item.Title</strong>
                                        @if (!string.IsNullOrEmpty(item.ReferenceNumber))
                                        {
                                            <br><small class="text-muted">مرجع: <span class="no-format-number" data-no-format="true">@item.ReferenceNumber</span></small>
                                        }
                                    </td>
                                    <td>
                                        @switch (item.Type)
                                        {
                                            case ForexExchange.Models.DocumentType.Cash:
                                                <span class="badge bg-success">نقدی</span>
                                                break;
                                         
                                            case ForexExchange.Models.DocumentType.Havala:
                                                <span class="badge bg-info">حواله</span>
                                                break;
                                            default:
                                                <span class="badge bg-secondary">@item.Type</span>
                                                break;
                                        }
                                    </td>
                                    <td>
                                        @if (item.PayerType == ForexExchange.Models.PayerType.Customer && item.PayerCustomer != null)
                                        {
                                            <a asp-controller="Customers" asp-action="Profile" asp-route-id="@item.PayerCustomerId" class="text-decoration-none">
                                                @item.PayerCustomer.FullName
                                            </a>
                                            <br><small class="text-muted">پرداخت کرده است</small>
                                        }
                                        else if (item.ReceiverType == ForexExchange.Models.ReceiverType.Customer && item.ReceiverCustomer != null)
                                        {
                                            <a asp-controller="Customers" asp-action="Profile" asp-route-id="@item.ReceiverCustomerId" class="text-decoration-none">
                                                @item.ReceiverCustomer.FullName
                                            </a>
                                            <br><small class="text-muted">دریافت کرده است</small>
                                        }
                                        else
                                        {
                                            <span class="text-muted">مشتری نامشخص</span>
                                        }
                                    </td>
                                 
                                    <td>
                                        <strong>@(item.CurrencyCode == "IRR" ? item.Amount.ToString("N0") : item.Amount.ToString("N2")) @item.CurrencyCode</strong>
                                    </td>
                                    <td>@item.DocumentDate.ToPersianDateTextify()</td>
                                    <td>
                                        @if (item.IsVerified)
                                        {
                                            <span class="badge bg-success">
                                                <i class="fas fa-check"></i> تأیید شده
                                            </span>
                                            @if (item.VerifiedAt.HasValue)
                                            {
                                                <br><small class="text-muted">@item.VerifiedAt.Value.ToPersianDateTextify()</small>
                                            }
                                        }
                                        else
                                        {
                                            <div class="d-flex align-items-center gap-2">
                                                <span class="badge bg-warning">
                                                    <i class="fas fa-clock"></i> در انتظار تأیید
                                                </span>
                                                @if (User.IsInRole("Admin") || User.IsInRole("Manager"))
                                                {
                                                    <button type="button" class="btn btn-sm btn-success" 
                                                            onclick="confirmDocument(@item.Id)" 
                                                            title="تأیید سند">
                                                        <i class="fas fa-check"></i>
                                                    </button>
                                                }
                                            </div>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="جزئیات">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                           
                                           
                                            @if (User.IsInRole("Admin"))
                                            {
                                                <button type="button" class="btn btn-sm btn-outline-danger" title="حذف سند (ادمین)"
                                                        onclick="confirmDocumentDelete(@item.Id, '@item.Title', @item.IsVerified.ToString().ToLower())">
                                                    <i class="fas fa-trash"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            
            @if (ViewBag.TotalPages > 1)
            {
                <div class="card-footer">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <small class="text-muted">
                                نمایش @(((ViewBag.CurrentPage - 1) * ViewBag.PageSize) + 1) تا 
                                @(Math.Min(ViewBag.CurrentPage * ViewBag.PageSize, ViewBag.TotalItems)) از 
                                @ViewBag.TotalItems مورد
                            </small>
                        </div>
                        <div class="col-md-6">
                            <nav aria-label="صفحه‌بندی اسناد">
                                <ul class="pagination pagination-sm justify-content-end mb-0">
                                    @if (ViewBag.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" 
                                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                               asp-route-referenceNumber="@ViewData["ReferenceFilter"]"
                                               asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                               asp-route-typeFilter="@ViewData["TypeFilter"]"
                                               asp-route-statusFilter="@ViewData["StatusFilter"]"
                                               asp-route-page="@(ViewBag.CurrentPage - 1)">
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        </li>
                                    }
                                    
                                    @{
                                        int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                                        int endPage = Math.Min(ViewBag.TotalPages, ViewBag.CurrentPage + 2);
                                    }
                                    
                                    @if (startPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" 
                                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                               asp-route-referenceNumber="@ViewData["ReferenceFilter"]"
                                               asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                               asp-route-typeFilter="@ViewData["TypeFilter"]"
                                               asp-route-statusFilter="@ViewData["StatusFilter"]"
                                               asp-route-page="1">1</a>
                                        </li>
                                        @if (startPage > 2)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                    }
                                    
                                    @for (int i = startPage; i <= endPage; i++)
                                    {
                                        <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                            <a class="page-link" asp-action="Index" 
                                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                               asp-route-referenceNumber="@ViewData["ReferenceFilter"]"
                                               asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                               asp-route-typeFilter="@ViewData["TypeFilter"]"
                                               asp-route-statusFilter="@ViewData["StatusFilter"]"
                                               asp-route-page="@i">@i</a>
                                        </li>
                                    }
                                    
                                    @if (endPage < ViewBag.TotalPages)
                                    {
                                        @if (endPage < ViewBag.TotalPages - 1)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" 
                                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                               asp-route-referenceNumber="@ViewData["ReferenceFilter"]"
                                               asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                               asp-route-typeFilter="@ViewData["TypeFilter"]"
                                               asp-route-statusFilter="@ViewData["StatusFilter"]"
                                               asp-route-page="@ViewBag.TotalPages">@ViewBag.TotalPages</a>
                                        </li>
                                    }
                                    
                                    @if (ViewBag.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" asp-action="Index" 
                                               asp-route-sortOrder="@ViewData["CurrentSort"]"
                                               asp-route-currentFilter="@ViewData["CurrentFilter"]"
                                               asp-route-referenceNumber="@ViewData["ReferenceFilter"]"
                                               asp-route-customerFilter="@ViewData["CustomerFilter"]"
                                               asp-route-typeFilter="@ViewData["TypeFilter"]"
                                               asp-route-statusFilter="@ViewData["StatusFilter"]"
                                               asp-route-page="@(ViewBag.CurrentPage + 1)">
                                                <i class="fas fa-chevron-left"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <div class="mb-3"><i class="fas fa-file-invoice fa-3x text-muted"></i></div>
                <h5 class="text-muted">هیچ سند حسابداری یافت نشد</h5>
                <p class="text-muted">برای شروع، اولین سند حسابداری خود را ثبت  کنید.</p>
                <a asp-action="Upload" class="btn btn-primary">
                    <i class="fas fa-plus"></i> ثبت  اولین سند
                </a>
            </div>
        </div>
    }
</div>

<!-- Beautiful Loading Overlay -->
<div id="loadingOverlay" class="loading-overlay">
    <div class="loading-content">
        <div class="loading-spinner">
            <div class="spinner-ring"></div>
            <div class="spinner-ring"></div>
            <div class="spinner-ring"></div>
        </div>
        <div class="loading-text">در حال پردازش...</div>
        <div class="loading-subtext">لطفاً منتظر بمانید</div>
    </div>
</div>

@* Hidden form for anti-forgery token *@
<form id="hiddenTokenForm" style="display: none;">
    @Html.AntiForgeryToken()
</form>

@section Scripts {
    <style>
        /* Beautiful Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(5px);
            -webkit-backdrop-filter: blur(5px);
            z-index: 99999;
            display: none;
            justify-content: center;
            align-items: center;
            animation: fadeIn 0.3s ease-in-out;
        }
        
        .loading-overlay.show {
            display: flex;
        }
        
        .loading-content {
            text-align: center;
            color: white;
            animation: slideUp 0.5s ease-out;
        }
        
        .loading-spinner {
            position: relative;
            width: 80px;
            height: 80px;
            margin: 0 auto 20px;
        }
        
        .spinner-ring {
            position: absolute;
            width: 100%;
            height: 100%;
            border: 3px solid transparent;
            border-top: 3px solid #007bff;
            border-radius: 50%;
            animation: spin 1.5s linear infinite;
        }
        
        .spinner-ring:nth-child(2) {
            width: 60px;
            height: 60px;
            top: 10px;
            left: 10px;
            border-top-color: #17a2b8;
            animation-duration: 1.2s;
            animation-direction: reverse;
        }
        
        .spinner-ring:nth-child(3) {
            width: 40px;
            height: 40px;
            top: 20px;
            left: 20px;
            border-top-color: #28a745;
            animation-duration: 0.9s;
        }
        
        .loading-text {
            font-size: 1.2rem;
            font-weight: 600;
            margin-bottom: 8px;
            opacity: 0;
            animation: fadeInText 0.8s ease-out 0.3s forwards;
        }
        
        .loading-subtext {
            font-size: 0.9rem;
            opacity: 0.8;
            opacity: 0;
            animation: fadeInText 0.8s ease-out 0.6s forwards;
        }
        
        @@keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        
        @@keyframes slideUp {
            from { 
                opacity: 0;
                transform: translateY(30px);
            }
            to { 
                opacity: 1;
                transform: translateY(0);
            }
        }
        
        @@keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        
        @@keyframes fadeInText {
            to { opacity: 1; }
        }
    </style>
    
    <script>
        // Loading Overlay Utility Functions
        function showLoadingOverlay(text = 'در حال پردازش...', subtext = 'لطفاً منتظر بمانید') {
            const overlay = document.getElementById('loadingOverlay');
            const loadingText = overlay.querySelector('.loading-text');
            const loadingSubtext = overlay.querySelector('.loading-subtext');
            
            loadingText.textContent = text;
            loadingSubtext.textContent = subtext;
            
            overlay.classList.add('show');
            document.body.style.overflow = 'hidden';
        }
        
        function hideLoadingOverlay() {
            const overlay = document.getElementById('loadingOverlay');
            overlay.classList.remove('show');
            document.body.style.overflow = '';
        }
        
        // Protect reference numbers from global formatting scripts
        document.addEventListener('DOMContentLoaded', function() {
            protectReferenceNumbers();
            
            // Protect continuously against global formatting
            setInterval(protectReferenceNumbers, 2000);
            
            // Also protect on DOM mutations
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.type === 'childList' || mutation.type === 'characterData') {
                        setTimeout(protectReferenceNumbers, 100);
                    }
                });
            });
            
            // Start observing the table for changes
            const tableBody = document.querySelector('tbody');
            if (tableBody) {
                observer.observe(tableBody, {
                    childList: true,
                    subtree: true,
                    characterData: true
                });
            }
        });
        
        function protectReferenceNumbers() {
            // Find all elements with no-format-number class
            const referenceElements = document.querySelectorAll('.no-format-number[data-no-format="true"]');
            
            referenceElements.forEach(function(element) {
                // Store original value if not already stored
                if (!element.hasAttribute('data-original-value')) {
                    element.setAttribute('data-original-value', element.textContent.trim());
                }
                
                const originalValue = element.getAttribute('data-original-value');
                const currentValue = element.textContent.trim();
                
                // If the content has been modified by global formatters, restore it
                if (currentValue !== originalValue && currentValue.includes(',')) {
                    element.textContent = originalValue;
                }
            });
        }

        function confirmDocument(documentId) {
            if (confirm('آیا از تأیید این سند حسابداری اطمینان دارید؟ این عملیات ترازها را بروزرسانی خواهد کرد.')) {
                // Show beautiful loading overlay
                showLoadingOverlay('در حال تأیید سند...', 'بروزرسانی ترازها و ارسال اعلان‌ها');
                
                // Find the confirm button and show loading state
                const confirmBtn = document.querySelector(`button[onclick="confirmDocument(${documentId})"]`);
                const originalText = confirmBtn.innerHTML;
                
                confirmBtn.disabled = true;
                confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
                
                // Get anti-forgery token
                const hiddenToken = document.querySelector('#hiddenTokenForm input[name="__RequestVerificationToken"]');
                if (!hiddenToken) {
                    hideLoadingOverlay();
                    alert('خطا: توکن امنیتی یافت نشد. لطفاً صفحه را رفرش کنید.');
                    confirmBtn.disabled = false;
                    confirmBtn.innerHTML = originalText;
                    return;
                }
                
                // Prepare form data
                const formData = new FormData();
                formData.append('__RequestVerificationToken', hiddenToken.value);
                
                // Send AJAX request
                fetch(`@Url.Action("Confirm", "AccountingDocuments")/${documentId}`, {
                    method: 'POST',
                    body: formData,
                    headers: {
                        'X-Requested-With': 'XMLHttpRequest'
                    }
                })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
                    }
                })
                .then(data => {
                    // Hide loading overlay
                    hideLoadingOverlay();
                    
                    if (data.success) {
                        // Show success message
                        showSuccessMessage(data.message);
                        
                        // Update the UI to show confirmed status
                        const statusCell = confirmBtn.closest('td');
                        statusCell.innerHTML = `
                            <span class="badge bg-success">
                                <i class="fas fa-check"></i> تأیید شده
                            </span>
                            <br><small class="text-muted">${data.verifiedAt || 'امروز'}</small>
                        `;
                    } else {
                        // Show error message
                        showErrorMessage('خطا در تأیید سند:', [data.message]);
                        
                        // Restore button state
                        confirmBtn.disabled = false;
                        confirmBtn.innerHTML = originalText;
                    }
                })
                .catch(error => {
                    console.error('AJAX Error:', error);
                    
                    // Hide loading overlay
                    hideLoadingOverlay();
                    
                    showErrorMessage('خطا در ارسال درخواست:', [error.message]);
                    
                    // Restore button state
                    confirmBtn.disabled = false;
                    confirmBtn.innerHTML = originalText;
                });
            }
        }

        function confirmDocumentDelete(documentId, documentTitle, isVerified) {
            var verificationMessage = isVerified ? 
                'این سند تأیید شده است و تأثیرات مالی آن برگردانده خواهد شد.' : 
                'این سند هنوز تأیید نشده است.';
            
            if (confirm(`آیا از حذف سند #${documentId} (${documentTitle}) اطمینان دارید؟\n\n${verificationMessage}\n\nاین عملیات غیرقابل بازگشت است.`)) {
                // Create and submit delete form
                var form = document.createElement('form');
                form.method = 'post';
                form.action = '@Url.Action("Delete", "AccountingDocuments")/' + documentId;
                
                // Get anti-forgery token from hidden form
                var hiddenToken = document.querySelector('#hiddenTokenForm input[name="__RequestVerificationToken"]');
                if (hiddenToken) {
                    var tokenInput = document.createElement('input');
                    tokenInput.type = 'hidden';
                    tokenInput.name = '__RequestVerificationToken';
                    tokenInput.value = hiddenToken.value;
                    form.appendChild(tokenInput);
                }
                
                document.body.appendChild(form);
                form.submit();
            }
        }
        
        // Helper function to show success messages
        function showSuccessMessage(message) {
            // Remove any existing alerts
            removeExistingAlerts();
            
            const successAlert = document.createElement('div');
            successAlert.className = 'alert alert-success alert-dismissible fade show';
            successAlert.innerHTML = `
                <i class="fas fa-check-circle"></i> ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            const container = document.querySelector('.container');
            container.insertBefore(successAlert, container.firstChild);
            window.scrollTo(0, 0);
        }
        
        // Helper function to show error messages
        function showErrorMessage(title, messages) {
            // Remove any existing alerts
            removeExistingAlerts();
            
            const errorAlert = document.createElement('div');
            errorAlert.className = 'alert alert-danger alert-dismissible fade show';
            
            let messageList = '';
            if (Array.isArray(messages)) {
                messageList = '<ul class="mb-0 mt-2">' + messages.map(msg => `<li>${msg}</li>`).join('') + '</ul>';
            } else {
                messageList = `<div class="mt-2">${messages}</div>`;
            }
            
            errorAlert.innerHTML = `
                <i class="fas fa-exclamation-triangle"></i> <strong>${title}</strong>
                ${messageList}
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            
            const container = document.querySelector('.container');
            container.insertBefore(errorAlert, container.firstChild);
            window.scrollTo(0, 0);
        }
        
        // Helper function to remove existing alerts
        function removeExistingAlerts() {
            const existingAlerts = document.querySelectorAll('.alert:not(.alert-info)');
            existingAlerts.forEach(alert => {
                if (alert.parentNode) {
                    alert.parentNode.removeChild(alert);
                }
            });
        }
    </script>
}
