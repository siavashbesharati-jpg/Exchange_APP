@model IEnumerable<ForexExchange.Models.Customer>

@{
    ViewData["Title"] = "مدیریت مشتریان";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>مدیریت مشتریان</h2>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> ثبت مشتری جدید
        </a>
    </div>

    @if (Model.Any())
    {
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">لیست مشتریان فعال</h5>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-striped table-hover">
                        <thead class="table-dark">
                            <tr>
                                <th>نام و نام خانوادگی</th>
                                <th>شماره تلفن</th>
                                <th>تعداد معاملات</th>
                                <th>عملیات</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var customer in Model)
                            {
                                <tr>
                                    <td>
                                        <a asp-action="Profile" asp-route-id="@customer.Id" class="text-decoration-none">
                                            <strong>@customer.FullName</strong>
                                        </a>
                                    </td>
                                    <td>
                                        <a href="tel:@customer.PhoneNumber" class="text-decoration-none">
                                            @customer.PhoneNumber
                                        </a>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">
                                            @customer.Orders.Count()
                                        </span>
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <button type="button" class="btn btn-sm btn-outline-success" 
                                                    onclick="showCustomerBalance(@customer.Id, '@customer.FullName')"
                                                    title="مشاهده موجودی">
                                                <i class="fas fa-wallet"></i>
                                            </button>
                                            <a asp-action="Profile" asp-route-id="@customer.Id" 
                                               class="btn btn-sm btn-outline-info" 
                                               title="پروفایل مشتری">
                                                <i class="fas fa-user"></i>
                                            </a>
                                             <a asp-action="Edit" asp-route-id="@customer.Id" 
                                               class="btn btn-sm btn-outline-warning" 
                                               title="ویرایش">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <div class="row mt-4">
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">تعداد کل مشتریان</h5>
                        <h2 class="text-primary">@Model.Count()</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">مشتریان جدید (امروز)</h5>
                        <h2 class="text-success">@Model.Count(c => c.CreatedAt.Date == DateTime.Today)</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card text-center">
                    <div class="card-body">
                        <h5 class="card-title">مشتریان فعال</h5>
                        <h2 class="text-info">@Model.Count(c => c.Orders.Any())</h2>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card">
            <div class="card-body text-center py-5">
                <div class="mb-4">
                    <i class="fas fa-users fa-4x text-muted"></i>
                </div>
                <h4 class="text-muted">هیچ مشتری‌ای ثبت نشده است</h4>
                <p class="text-muted">برای شروع، اولین مشتری خود را ثبت کنید.</p>
                <a asp-action="Create" class="btn btn-primary btn-lg">
                    <i class="fas fa-plus"></i> ثبت مشتری جدید
                </a>
            </div>
        </div>
    }
</div>

<!-- Customer Balance Modal -->
<div class="modal fade" id="customerBalanceModal" tabindex="-1" aria-labelledby="customerBalanceModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header bg-gradient-success text-white">
                <h5 class="modal-title" id="customerBalanceModalLabel">
                    <i class="fas fa-wallet me-2"></i>موجودی مشتری
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="balanceLoadingSpinner" class="text-center py-4">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">در حال بارگذاری...</span>
                    </div>
                    <p class="mt-2 text-muted">در حال بارگذاری موجودی...</p>
                </div>
                <div id="balanceContent" style="display: none;">
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="alert alert-info d-flex align-items-center">
                                <i class="fas fa-info-circle me-2"></i>
                                <div>
                                    <strong>نام مشتری:</strong> <span id="customerNameDisplay"></span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <h6 class="fw-bold mb-3">
                                <i class="fas fa-coins me-2"></i>موجودی به تفکیک ارز
                            </h6>
                            <div id="balanceList">
                                <!-- Balance items will be loaded here -->
                            </div>
                        </div>
                    </div>
                </div>
                <div id="balanceError" style="display: none;">
                    <div class="alert alert-danger">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        خطا در بارگذاری اطلاعات موجودی
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">بستن</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/js/all.min.js"></script>
    <script>
        // Add search functionality
        function searchCustomers() {
            var input, filter, table, tr, td, i, txtValue;
            input = document.getElementById("customerSearch");
            filter = input.value.toUpperCase();
            table = document.querySelector("table");
            tr = table.getElementsByTagName("tr");
            
            for (i = 1; i < tr.length; i++) {
                tr[i].style.display = "none";
                td = tr[i].getElementsByTagName("td");
                for (var j = 0; j < td.length; j++) {
                    if (td[j]) {
                        txtValue = td[j].textContent || td[j].innerText;
                        if (txtValue.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                            break;
                        }
                    }
                }
            }
        }

        // Show customer balance modal
        function showCustomerBalance(customerId, customerName) {
            // Set customer name in modal
            document.getElementById('customerNameDisplay').textContent = customerName;
            
            // Show modal
            const modal = new bootstrap.Modal(document.getElementById('customerBalanceModal'));
            modal.show();
            
            // Show loading state
            document.getElementById('balanceLoadingSpinner').style.display = 'block';
            document.getElementById('balanceContent').style.display = 'none';
            document.getElementById('balanceError').style.display = 'none';
            
            // Fetch balance data
            fetch(`/Customers/GetCustomerBalance/${customerId}`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    displayCustomerBalance(data);
                })
                .catch(error => {
                    showBalanceError();
                });
        }

        // Display customer balance data
        function displayCustomerBalance(balances) {
            const balanceList = document.getElementById('balanceList');
            
            // Hide loading spinner
            document.getElementById('balanceLoadingSpinner').style.display = 'none';
            
            if (!balances || balances.length === 0) {
                balanceList.innerHTML = `
                    <div class="alert alert-warning text-center">
                        <i class="fas fa-info-circle me-2"></i>
                        هیچ موجودی برای این مشتری ثبت نشده است
                    </div>
                `;
            } else {
                let html = '<div class="row">';
                
                balances.forEach(balance => {
                    const balanceClass = balance.balance > 0 ? 'success' : 
                                       balance.balance < 0 ? 'danger' : 'secondary';
                    const balanceIcon = balance.balance > 0 ? 'fa-arrow-up' : 
                                      balance.balance < 0 ? 'fa-arrow-down' : 'fa-minus';
                    const balanceStatus = balance.balance > 0 ? 'اعتبار' : 
                                        balance.balance < 0 ? 'بدهی' : 'تسویه';
                    
                    html += `
                        <div class="col-md-6 mb-3">
                            <div class="card border-${balanceClass}">
                                <div class="card-body">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <div>
                                            <h6 class="card-title mb-1">
                                                <i class="fas fa-coins me-2 text-${balanceClass}"></i>
                                                ${balance.currencyCode}
                                            </h6>
                                            <p class="card-text mb-1">
                                                <strong class="h5 text-${balanceClass}">
                                                    ${Math.abs(balance.balance).toLocaleString('fa-IR')}
                                                </strong>
                                            </p>
                                            <small class="text-muted">
                                                <i class="fas ${balanceIcon} me-1"></i>
                                                ${balanceStatus}
                                            </small>
                                        </div>
                                        <div class="text-end">
                                            <span class="badge bg-${balanceClass} fs-6">
                                                ${balance.currencyCode}
                                            </span>
                                        </div>
                                    </div>
                                    ${balance.notes ? `
                                        <hr class="my-2">
                                        <small class="text-muted">
                                            <i class="fas fa-sticky-note me-1"></i>
                                            ${balance.notes}
                                        </small>
                                    ` : ''}
                                </div>
                            </div>
                        </div>
                    `;
                });
                
                html += '</div>';
                
                // Add summary
                const totalBalances = balances.length;
                const creditBalances = balances.filter(b => b.balance > 0).length;
                const debtBalances = balances.filter(b => b.balance < 0).length;
                
                html += `
                    <div class="row mt-3">
                        <div class="col-12">
                            <div class="card bg-light">
                                <div class="card-body">
                                    <h6 class="card-title">
                                        <i class="fas fa-chart-pie me-2"></i>خلاصه موجودی
                                    </h6>
                                    <div class="row text-center">
                                        <div class="col-4">
                                            <div class="fw-bold text-primary">${totalBalances}</div>
                                            <small class="text-muted">کل ارزها</small>
                                        </div>
                                        <div class="col-4">
                                            <div class="fw-bold text-success">${creditBalances}</div>
                                            <small class="text-muted">اعتبار</small>
                                        </div>
                                        <div class="col-4">
                                            <div class="fw-bold text-danger">${debtBalances}</div>
                                            <small class="text-muted">بدهی</small>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
                
                balanceList.innerHTML = html;
            }
            
            // Show content
            document.getElementById('balanceContent').style.display = 'block';
        }

        // Show balance error
        function showBalanceError() {
            document.getElementById('balanceLoadingSpinner').style.display = 'none';
            document.getElementById('balanceContent').style.display = 'none';
            document.getElementById('balanceError').style.display = 'block';
        }
    </script>
}
