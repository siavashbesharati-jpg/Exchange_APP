@model IEnumerable<ForexExchange.Models.ExchangeRate>

@{
    ViewData["Title"] = "مدیریت ارزها";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3">مدیریت ارزها</h1>
                <a asp-action="Index" class="btn btn-secondary">بازگشت به نرخ‌ها</a>
            </div>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="بستن"></button>
        </div>
    }

    <!-- Quick Update Form (base pairs) -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">بروزرسانی سریع نرخ‌ها</h5>
                </div>
                <div class="card-body">
                    <form asp-action="UpdateAll" method="post">
                        <div class="table-responsive">
                            <table class="table table-bordered">
                                <thead class="table-light">
                                    <tr>
                                        <th>ارز (به تومان)</th>
                                        <th>نرخ خرید (تومان)</th>
                                        <th>نرخ فروش (تومان)</th>
                                        <th>آخرین بروزرسانی</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var currencies = ViewBag.Currencies as IEnumerable<dynamic>;
                                    }
                                    @if (currencies != null)
                                    {
                                        foreach (var c in currencies)
                                        {
                                            int currencyKey = c.Id;
                                            var currentRate = Model.FirstOrDefault(r => r.FromCurrencyId == currencyKey);
                                            string badgeClass = ((string)c.Code).ToUpper() switch
                                            {
                                                "USD" => "bg-primary",
                                                "EUR" => "bg-success",
                                                "AED" => "bg-info",
                                                "OMR" => "bg-warning",
                                                "TRY" => "bg-danger",
                                                _ => "bg-secondary"
                                            };
                                            <tr>
                                                <td>
                                                    <span class="badge @badgeClass">@c.PersianName (@c.Code) → IRR</span>
                                                </td>
                                                <td>
                                                    <input name="buyRates[@currencyKey]" type="number" class="form-control"
                                                           value="@(currentRate?.BuyRate ?? 0)" step="0.01" min="0" required />
                                                </td>
                                                <td>
                                                    <input name="sellRates[@currencyKey]" type="number" class="form-control"
                                                           value="@(currentRate?.SellRate ?? 0)" step="0.01" min="0" required />
                                                </td>
                                                <td>
                                                    @if (currentRate != null)
                                                    {
                                                        <small class="text-muted">@currentRate.UpdatedAt.ToString("yyyy/MM/dd HH:mm")</small>
                                                    }
                                                    else
                                                    {
                                                        <small class="text-muted">ثبت نشده</small>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        <div class="text-center">
                            <button type="submit" class="btn btn-success me-2" onclick="return confirm('آیا می‌خواهید نرخ‌های پایه (ارز→تومان) را بروزرسانی کنید؟')">
                                بروزرسانی نرخ‌های ارز → تومان
                            </button>
                            <button type="button" class="btn btn-primary" onclick="updateFromWeb()" title="بروزرسانی خودکار از وب">
                                <i class="fas fa-globe"></i> بروزرسانی از وب
                            </button>
                        </div>
                    </form>
                    
                    <!-- Hidden form for web update -->
                    <form id="webUpdateForm" asp-action="UpdateFromWeb" method="post" style="display: none;">
                        @Html.AntiForgeryToken()
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Currency-to-Currency Pair Management -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">مدیریت تبدیل ارز به ارز</h5>
                </div>
                <div class="card-body">
                    <form asp-action="BulkUpdatePairs" method="post">
                        <div class="row g-2 align-items-end mb-3">
                            <div class="col-md-4">
                                <label class="form-label">از ارز</label>
                                <select id="fromCurrency" class="form-select"></select>
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">به ارز</label>
                                <select id="toCurrency" class="form-select"></select>
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">نرخ خرید</label>
                                <input id="pairBuy" type="number" class="form-control" step="0.0001" min="0">
                            </div>
                            <div class="col-md-2">
                                <label class="form-label">نرخ فروش</label>
                                <input id="pairSell" type="number" class="form-control" step="0.0001" min="0">
                            </div>
                        </div>
                        <div class="mb-3">
                            <button type="button" class="btn btn-outline-primary" onclick="addPair()">افزودن به لیست</button>
                            <button type="submit" class="btn btn-success">ثبت تغییرات</button>
                        </div>
                        <div class="table-responsive">
                            <table class="table table-striped" id="pairsTable">
                                <thead>
                                    <tr>
                                        <th>از</th>
                                        <th>به</th>
                                        <th>نرخ خرید</th>
                                        <th>نرخ فروش</th>
                                        <th>حذف</th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Validate sell rate is higher than buy rate
        document.querySelectorAll('input[name*="buyRates"], input[name*="sellRates"]').forEach(function(input) {
            input.addEventListener('change', function() {
                var row = this.closest('tr');
                var buyInput = row.querySelector('input[name*="buyRates"]');
                var sellInput = row.querySelector('input[name*="sellRates"]');
                
                if (buyInput.value && sellInput.value) {
                    if (parseFloat(sellInput.value) <= parseFloat(buyInput.value)) {
                        alert('نرخ فروش باید بیشتر از نرخ خرید باشد.');
                        sellInput.focus();
                    }
                }
            });
        });

        // Function to update rates from web
        function updateFromWeb() {
            if (confirm('آیا می‌خواهید نرخ‌ها را از وب بروزرسانی کنید؟\nاین عمل ممکن است چند دقیقه طول بکشد.')) {
                // Show loading indicator
                var button = event.target;
                var originalText = button.innerHTML;
                button.innerHTML = '<i class="fas fa-spinner fa-spin"></i> در حال بروزرسانی...';
                button.disabled = true;

                // Submit the hidden form
                document.getElementById('webUpdateForm').submit();
            }
        }

        // Populate currency dropdowns
        const currencies = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ViewBag.Currencies ?? new object[0]));
        const fromSel = document.getElementById('fromCurrency');
        const toSel = document.getElementById('toCurrency');
        function fillSelect(select) {
            select.innerHTML = '';
            currencies.forEach(c => {
                const opt = document.createElement('option');
                opt.value = c.id ?? c.Id;
                opt.textContent = `${c.persianName ?? c.PersianName} (${c.code ?? c.Code})`;
                select.appendChild(opt);
            });
        }
        fillSelect(fromSel);
        fillSelect(toSel);

        // Manage pairs list
        const tbody = document.querySelector('#pairsTable tbody');
        function addPair() {
            const fromId = parseInt(fromSel.value);
            const toId = parseInt(toSel.value);
            const buy = parseFloat(document.getElementById('pairBuy').value);
            const sell = parseFloat(document.getElementById('pairSell').value);
            if (!fromId || !toId || fromId === toId) { alert('ارز مبدأ و مقصد باید متفاوت باشند.'); return; }
            if (!buy || !sell || sell <= buy) { alert('نرخ‌ها نامعتبر است. نرخ فروش باید بزرگ‌تر از خرید باشد.'); return; }

            const tr = document.createElement('tr');
            tr.innerHTML = `
                <td data-id="${fromId}">${fromSel.options[fromSel.selectedIndex].text}</td>
                <td data-id="${toId}">${toSel.options[toSel.selectedIndex].text}</td>
                <td>${buy}</td>
                <td>${sell}</td>
                <td><button type="button" class="btn btn-sm btn-outline-danger" onclick="this.closest('tr').remove()">حذف</button></td>
                <input type="hidden" name="pairs[${tbody.children.length}].FromCurrencyId" value="${fromId}" />
                <input type="hidden" name="pairs[${tbody.children.length}].ToCurrencyId" value="${toId}" />
                <input type="hidden" name="pairs[${tbody.children.length}].BuyRate" value="${buy}" />
                <input type="hidden" name="pairs[${tbody.children.length}].SellRate" value="${sell}" />
            `;
            tbody.appendChild(tr);
        }
    </script>
}
