@model ForexExchange.Models.Order

@{
    ViewData["Title"] = "ثبت سفارش جدید";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header">
                    <h4 class="card-title mb-0">ثبت سفارش جدید</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Create" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        
                        <div class="row mb-3">
                         
                                <div class="col-md-6">
                                    <label asp-for="CustomerId" class="form-label">انتخاب مشتری</label>
                                    <select asp-for="CustomerId" asp-items="ViewBag.Customers" class="form-select" id="customerSelect" required>
                                        <option value="">یک مشتری انتخاب کنید</option>
                                    </select>
                                    <span asp-validation-for="CustomerId" class="text-danger"></span>
                                </div>
                            
                          
                            
                            <!-- Removed OrderType dropdown -->
                        </div>

                        <div class="row mb-3">
                            <div class="col-md-4">
                                <label asp-for="FromCurrencyId" class="form-label">از ارز (مبدأ)</label>
                                <select asp-for="FromCurrencyId" asp-items="ViewBag.FromCurrencies" class="form-select" id="fromCurrencySelect" required>
                                    <option value="">انتخاب کنید</option>
                                </select>
                                <span asp-validation-for="FromCurrencyId" class="text-danger"></span>
                            </div>
                            
                            <div class="col-md-4">
                                <label asp-for="ToCurrencyId" class="form-label">به ارز (مقصد)</label>
                                <select asp-for="ToCurrencyId" asp-items="ViewBag.ToCurrencies" class="form-select" id="toCurrencySelect" required>
                                    <option value="">انتخاب کنید</option>
                                </select>
                                <span asp-validation-for="ToCurrencyId" class="text-danger"></span>
                            </div>
                            
                            <div class="col-md-4">
                                <label asp-for="Amount" class="form-label">مبلغ (ارز مبدأ)</label>
                                <input asp-for="Amount" type="number" class="form-control" step="0.01" min="0" id="amountInput" required />
                                <span asp-validation-for="Amount" class="text-danger"></span>
                            </div>
                        </div>

                        <!-- Currency Pair Information -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="alert alert-info" id="currencyPairInfo" style="display: none;">
                                    <h6>اطلاعات جفت ارز:</h6>
                                    <p id="currencyPairText"></p>
                                </div>
                            </div>
                        </div>

                        <!-- Exchange Rate Display -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="card bg-light">
                                    <div class="card-body">
                                        <h6 class="card-title">نرخ ارز انتخابی:</h6>
                                        <div id="selectedExchangeRate" class="alert alert-info" style="display: none;">
                                            <div id="rateInfo"></div>
                                            <div class="spinner-border spinner-border-sm" id="rateLoader" style="display: none;" role="status">
                                                <span class="visually-hidden">در حال بارگذاری...</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Calculation Result -->
                        <div class="row mb-3">
                            <div class="col-12">
                                <div class="alert alert-info" id="calculationResult" style="display: none;">
                                    <h6>محاسبه خودکار:</h6>
                                    <p id="calculationText"></p>
                                </div>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="Notes" class="form-label">توضیحات (اختیاری)</label>
                            <textarea asp-for="Notes" class="form-control" rows="3" placeholder="توضیحات اضافی در مورد سفارش..."></textarea>
                            <span asp-validation-for="Notes" class="text-danger"></span>
                        </div>

                        <div class="d-flex justify-content-between">
                            <a asp-action="Index" class="btn btn-secondary">بازگشت به لیست</a>
                            <button type="submit" class="btn btn-primary">ثبت سفارش</button>
                        </div>
                        
                        <!-- Hidden fields for calculated values -->
                        <input type="hidden" asp-for="Rate" id="hiddenRate" value="0" />
                        <input type="hidden" asp-for="TotalAmount" id="hiddenTotalAmount" value="0" />
                        <input type="hidden" asp-for="Status" value="0" />
                        <input type="hidden" asp-for="FilledAmount" value="0" />
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        let currentRate = null;
        
        function updateCurrencyPairInfo() {
            var fromCurrency = document.getElementById('fromCurrencySelect').value;
            var toCurrency = document.getElementById('toCurrencySelect').value;
            // Reset displays
            document.getElementById('currencyPairInfo').style.display = 'none';
            document.getElementById('selectedExchangeRate').style.display = 'none';
            document.getElementById('calculationResult').style.display = 'none';
            currentRate = null;
            // Prevent same currency selection
            if (fromCurrency && toCurrency && fromCurrency === toCurrency) {
                document.getElementById('currencyPairInfo').style.display = 'block';
                document.getElementById('currencyPairText').innerHTML = '<span class="text-danger">خطا: ارز مبدأ و مقصد نمی‌توانند یکسان باشند</span>';
                return;
            }
            if (fromCurrency && toCurrency) {
                document.getElementById('currencyPairText').innerHTML = `جفت ارز انتخاب شده`;
                document.getElementById('currencyPairInfo').style.display = 'block';
                // Load exchange rate via AJAX
                loadExchangeRate(fromCurrency, toCurrency);
            }
        }
        
        function loadExchangeRate(fromCurrencyId, toCurrencyId) {
            document.getElementById('selectedExchangeRate').style.display = 'block';
            document.getElementById('rateLoader').style.display = 'inline-block';
            document.getElementById('rateInfo').innerHTML = 'در حال بارگذاری نرخ ارز...';
            fetch(`/Orders/GetExchangeRate?fromCurrencyId=${fromCurrencyId}&toCurrencyId=${toCurrencyId}`)
                .then(response => response.json())
                .then(data => {
                    document.getElementById('rateLoader').style.display = 'none';
                    if (data.success) {
                        if (data.rate > 0) {
                            currentRate = data.rate;
                            document.getElementById('rateInfo').innerHTML = 
                                `<strong>نرخ:</strong> ${data.rate.toLocaleString()} <small class="text-muted">(${data.source})</small>`;
                            document.getElementById('hiddenRate').value = data.rate;
                            updateCalculation();
                        } else {
                            document.getElementById('rateInfo').innerHTML = 
                                '<span class="text-warning">نرخ ارز برای این جفت ارز موجود نیست</span>';
                            document.getElementById('hiddenRate').value = '0';
                        }
                    } else {
                        document.getElementById('rateInfo').innerHTML = 
                            `<span class="text-danger">خطا: ${data.error}</span>`;
                        document.getElementById('hiddenRate').value = '0';
                    }
                })
                .catch(error => {
                    document.getElementById('rateLoader').style.display = 'none';
                    document.getElementById('rateInfo').innerHTML = 
                        '<span class="text-danger">خطا در بارگذاری نرخ ارز</span>';
                    console.error('Error loading exchange rate:', error);
                });
        }
        
        function updateCalculation() {
            var amount = document.getElementById('amountInput').value;
            
            if (amount && currentRate && currentRate > 0) {
                var total = parseFloat(amount) * currentRate;
                
                document.getElementById('calculationText').innerHTML = 
                    `${parseFloat(amount).toLocaleString()} × ${currentRate.toLocaleString()} = <strong>${total.toLocaleString()}</strong>`;
                document.getElementById('calculationResult').style.display = 'block';
                
                // Update hidden total amount field
                document.getElementById('hiddenTotalAmount').value = total;
            } else {
                document.getElementById('calculationResult').style.display = 'none';
                document.getElementById('hiddenTotalAmount').value = '0';
            }
        }
        
        // Add event listeners
        document.getElementById('fromCurrencySelect').addEventListener('change', updateCurrencyPairInfo);
        document.getElementById('toCurrencySelect').addEventListener('change', updateCurrencyPairInfo);
        document.getElementById('amountInput').addEventListener('input', updateCalculation);
    // Removed OrderType event listener
        
        // Add form submission validation
        document.querySelector('form').addEventListener('submit', function(e) {
            var fromCurrency = document.getElementById('fromCurrencySelect').value;
            var toCurrency = document.getElementById('toCurrencySelect').value;
            var amount = document.getElementById('amountInput').value;
            var customerId = document.getElementById('customerSelect').value;
            var rate = document.getElementById('hiddenRate').value;
            if (!customerId || !fromCurrency || !toCurrency || !amount || !rate || rate === '0') {
                e.preventDefault();
                alert('لطفاً تمام فیلدهای ضروری را تکمیل کنید و منتظر بارگذاری نرخ ارز باشید.');
                return false;
            }
            if (fromCurrency === toCurrency) {
                e.preventDefault();
                alert('ارز مبدأ و مقصد نمی‌توانند یکسان باشند.');
                return false;
            }
        });
    </script>
}
