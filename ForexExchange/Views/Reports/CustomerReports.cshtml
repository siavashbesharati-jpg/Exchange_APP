@{
    ViewData["Title"] = "گزارشات مشتریان";
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <h2><i class="fas fa-users text-primary me-2"></i>گزارشات مشتریان</h2>
                <a href="@Url.Action("Index", "Reports")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-right me-1"></i>بازگشت
                </a>
            </div>
        </div>
    </div>

    <!-- Filters -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm border-3">
                <div class="card-body">
                    <div class="row g-3">
                        <div class="col-md-2">
                            <label class="form-label">از تاریخ</label>
                            <input type="date" class="form-control" id="fromDate">
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">تا تاریخ</label>
                            <input type="date" class="form-control" id="toDate">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">مشتری</label>
                            <select class="form-select" id="customerFilter">
                                <option value="">همه مشتریان</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">ارز</label>
                            <select class="form-select" id="currencyFilter">
                                <option value="">همه ارزها</option>
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-primary w-100" onclick="loadData()">
                                <i class="fas fa-search me-1"></i>جستجو
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabs -->
    <div class="row">
        <div class="col-12">
            <ul class="nav nav-tabs nav-fill mb-4" id="reportTabs">
                <li class="nav-item">
                    <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#balances-tab">
                        <i class="fas fa-wallet me-1"></i>موجودی مشتریان
                    </button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#orders-tab">
                        <i class="fas fa-exchange-alt me-1"></i>معاملات مشتریان
                    </button>
                </li>
                <li class="nav-item">
                    <button class="nav-link" data-bs-toggle="tab" data-bs-target="#documents-tab">
                        <i class="fas fa-file-invoice me-1"></i>اسناد حسابداری
                    </button>
                </li>
            </ul>

            <div class="tab-content">
                <!-- Customer Balances Tab -->
                <div class="tab-pane fade show active" id="balances-tab">
                    <div class="card shadow-sm border-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-wallet me-2"></i>موجودی مشتریان</h5>
                            <button class="btn btn-success btn-sm" onclick="exportData('balances')">
                                <i class="fas fa-file-excel me-1"></i>Excel
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>مشتری</th>
                                            <th>ارز</th>
                                            <th>موجودی</th>
                                            <th>آخرین تراکنش</th>
                                        </tr>
                                    </thead>
                                    <tbody id="balancesTableBody">
                                        <tr><td colspan="4" class="text-center py-4">در حال بارگذاری...</td></tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- Pagination -->
                            <nav id="balancesPagination" class="mt-3"></nav>
                        </div>
                    </div>
                </div>

                <!-- Customer Orders Tab -->
                <div class="tab-pane fade" id="orders-tab">
                    <div class="card shadow-sm border-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-exchange-alt me-2"></i>معاملات مشتریان</h5>
                            <button class="btn btn-success btn-sm" onclick="exportData('orders')">
                                <i class="fas fa-file-excel me-1"></i>Excel
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>مشتری</th>
                                            <th>ارز مبدا</th>
                                            <th>مقدار</th>
                                            <th>ارز مقصد</th>
                                            <th>مقدار</th>
                                            <th>تاریخ</th>
                                            <th>وضعیت</th>
                                        </tr>
                                    </thead>
                                    <tbody id="ordersTableBody">
                                        <tr><td colspan="7" class="text-center py-4">در حال بارگذاری...</td></tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- Pagination -->
                            <nav id="ordersPagination" class="mt-3"></nav>
                        </div>
                    </div>
                </div>

                <!-- Account Documents Tab -->
                <div class="tab-pane fade" id="documents-tab">
                    <div class="card shadow-sm border-3">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <h5 class="mb-0"><i class="fas fa-file-invoice me-2"></i>اسناد حسابداری</h5>
                            <button class="btn btn-success btn-sm" onclick="exportData('documents')">
                                <i class="fas fa-file-excel me-1"></i>Excel
                            </button>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>شماره سند</th>
                                            <th>مشتری</th>
                                            <th>نوع</th>
                                            <th>مبلغ</th>
                                            <th>ارز</th>
                                            <th>تاریخ</th>
                                            <th>توضیحات</th>
                                        </tr>
                                    </thead>
                                    <tbody id="documentsTableBody">
                                        <tr><td colspan="7" class="text-center py-4">در حال بارگذاری...</td></tr>
                                    </tbody>
                                </table>
                            </div>
                            <!-- Pagination -->
                            <nav id="documentsPagination" class="mt-3"></nav>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
let currentPage = { balances: 1, orders: 1, documents: 1 };
let pageSize = 10;

document.addEventListener('DOMContentLoaded', function() {
    // Set default dates (last 30 days)
    const today = new Date();
    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
    
    document.getElementById('fromDate').value = lastMonth.toISOString().split('T')[0];
    document.getElementById('toDate').value = today.toISOString().split('T')[0];
    
    // Load currencies for filter
    loadCurrencies();
    
    // Load customers for filter
    loadCustomers();
    
    // Load initial data
    loadData();
    
    // Tab change event
    document.querySelectorAll('[data-bs-toggle="tab"]').forEach(tab => {
        tab.addEventListener('shown.bs.tab', function(e) {
            const target = e.target.getAttribute('data-bs-target');
            if (target === '#orders-tab') loadOrders();
            else if (target === '#documents-tab') loadDocuments();
        });
    });
});

function loadCurrencies() {
    fetch('@Url.Action("GetCurrencies", "Api")')
        .then(response => response.json())
        .then(currencies => {
            const select = document.getElementById('currencyFilter');
            select.innerHTML = '<option value="">همه ارزها</option>';
            currencies.forEach(currency => {
                select.innerHTML += `<option value="${currency.code}">${currency.name} (${currency.code})</option>`;
            });
        })
        .catch(error => console.error('Error loading currencies:', error));
}

function loadCustomers() {
    fetch('@Url.Action("GetCustomersData", "Reports")')
        .then(response => response.json())
        .then(data => {
            if (data.customers) {
                const select = document.getElementById('customerFilter');
                select.innerHTML = '<option value="">همه مشتریان</option>';
                data.customers.forEach(customer => {
                    select.innerHTML += `<option value="${customer.id}">${customer.fullName}</option>`;
                });
            }
        })
        .catch(error => console.error('Error loading customers:', error));
}

function loadData() {
    loadBalances();
}

function loadBalances(page = 1) {
    currentPage.balances = page;
    const tbody = document.getElementById('balancesTableBody');
    tbody.innerHTML = '<tr><td colspan="4" class="text-center py-4"><div class="spinner-border text-primary"></div></td></tr>';
    
    const params = new URLSearchParams({
        fromDate: document.getElementById('fromDate').value,
        toDate: document.getElementById('toDate').value,
        currency: document.getElementById('currencyFilter').value,
        customer: document.getElementById('customerFilter').value,
        page: page,
        pageSize: pageSize
    });
    
    fetch(`@Url.Action("GetCustomerBalances", "Reports")?${params}`)
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';
            
            if (data.success && data.data && data.data.length > 0) {
                data.data.forEach(balance => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>
                            <a href="@Url.Action("Details", "Customers")/${balance.customerId}" class="text-decoration-none fw-bold">
                                ${balance.customerName}
                            </a>
                        </td>
                        <td>
                            <span class="badge bg-primary">${balance.currencyCode}</span>
                        </td>
                        <td class="fw-bold text-end">
                            ${formatCurrency(balance.amount, balance.currencyCode)}
                        </td>
                        <td>
                            ${formatDate(balance.lastUpdated)}
                        </td>
                    `;
                    tbody.appendChild(row);
                });
                
                // Update pagination
                updatePagination('balancesPagination', data.totalPages, page, loadBalances);
            } else {
                tbody.innerHTML = '<tr><td colspan="4" class="text-center py-4 text-muted">موجودی یافت نشد</td></tr>';
            }
        })
        .catch(error => {
            console.error('Error loading balances:', error);
            tbody.innerHTML = '<tr><td colspan="4" class="text-center py-4 text-danger">خطا در بارگذاری اطلاعات</td></tr>';
        });
}

function loadOrders(page = 1) {
    currentPage.orders = page;
    const tbody = document.getElementById('ordersTableBody');
    tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4"><div class="spinner-border text-primary"></div></td></tr>';
    
    const params = new URLSearchParams({
        fromDate: document.getElementById('fromDate').value,
        toDate: document.getElementById('toDate').value,
        currency: document.getElementById('currencyFilter').value,
        customer: document.getElementById('customerFilter').value,
        page: page,
        pageSize: pageSize
    });
    
    fetch(`@Url.Action("GetCustomerOrders", "Reports")?${params}`)
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';
            
            if (data.success && data.data && data.data.length > 0) {
                data.data.forEach(order => {
                    const statusClass = order.status === 'Completed' ? 'success' : 
                                      order.status === 'Pending' ? 'warning' : 'secondary';
                    const statusText = order.status === 'Completed' ? 'تکمیل شده' :
                                     order.status === 'Pending' ? 'در انتظار' : 'لغو شده';
                    
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>
                            <a href="@Url.Action("Details", "Customers")/${order.customerId}" class="text-decoration-none fw-bold">
                                ${order.customerName}
                            </a>
                        </td>
                        <td><span class="badge bg-primary">${order.fromCurrency}</span></td>
                        <td class="text-end">${formatCurrency(order.fromAmount, order.fromCurrency)}</td>
                        <td><span class="badge bg-success">${order.toCurrency}</span></td>
                        <td class="text-end">${formatCurrency(order.toAmount, order.toCurrency)}</td>
                        <td>
                            <a href="@Url.Action("Details", "Orders")/${order.id}" class="text-decoration-none">
                                ${formatDate(order.createdAt)}
                            </a>
                        </td>
                        <td>
                            <span class="badge bg-${statusClass}">${statusText}</span>
                        </td>
                    `;
                    tbody.appendChild(row);
                });
                
                updatePagination('ordersPagination', data.totalPages, page, loadOrders);
            } else {
                tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4 text-muted">معامله‌ای یافت نشد</td></tr>';
            }
        })
        .catch(error => {
            console.error('Error loading orders:', error);
            tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4 text-danger">خطا در بارگذاری اطلاعات</td></tr>';
        });
}

function loadDocuments(page = 1) {
    currentPage.documents = page;
    const tbody = document.getElementById('documentsTableBody');
    tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4"><div class="spinner-border text-primary"></div></td></tr>';
    
    const params = new URLSearchParams({
        fromDate: document.getElementById('fromDate').value,
        toDate: document.getElementById('toDate').value,
        currency: document.getElementById('currencyFilter').value,
        customer: document.getElementById('customerFilter').value,
        page: page,
        pageSize: pageSize
    });
    
    fetch(`@Url.Action("GetCustomerDocuments", "Reports")?${params}`)
        .then(response => response.json())
        .then(data => {
            tbody.innerHTML = '';
            
            if (data.success && data.data && data.data.length > 0) {
                data.data.forEach(doc => {
                    const typeText = doc.type === 'Receipt' ? 'رسید' :
                                   doc.type === 'Payment' ? 'پرداخت' : 'سایر';
                    const typeClass = doc.type === 'Receipt' ? 'success' : 'info';
                    
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td>
                            <a href="@Url.Action("Details", "AccountingDocuments")/${doc.id}" class="text-decoration-none fw-bold">
                                #${doc.documentNumber}
                            </a>
                        </td>
                        <td>
                            <a href="@Url.Action("Details", "Customers")/${doc.customerId}" class="text-decoration-none">
                                ${doc.customerName}
                            </a>
                        </td>
                        <td>
                            <span class="badge bg-${typeClass}">${typeText}</span>
                        </td>
                        <td class="text-end fw-bold">
                            ${formatCurrency(doc.amount, doc.currencyCode)}
                        </td>
                        <td>
                            <span class="badge bg-primary">${doc.currencyCode}</span>
                        </td>
                        <td>${formatDate(doc.createdAt)}</td>
                        <td class="text-muted">${doc.description || '-'}</td>
                    `;
                    tbody.appendChild(row);
                });
                
                updatePagination('documentsPagination', data.totalPages, page, loadDocuments);
            } else {
                tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4 text-muted">سندی یافت نشد</td></tr>';
            }
        })
        .catch(error => {
            console.error('Error loading documents:', error);
            tbody.innerHTML = '<tr><td colspan="7" class="text-center py-4 text-danger">خطا در بارگذاری اطلاعات</td></tr>';
        });
}

function updatePagination(containerId, totalPages, currentPageNum, loadFunction) {
    const container = document.getElementById(containerId);
    if (totalPages <= 1) {
        container.innerHTML = '';
        return;
    }
    
    let pagination = '<ul class="pagination justify-content-center">';
    
    // Previous button
    if (currentPageNum > 1) {
        pagination += `<li class="page-item"><a class="page-link" href="#" onclick="${loadFunction.name}(${currentPageNum - 1}); return false;">قبلی</a></li>`;
    }
    
    // Page numbers
    for (let i = Math.max(1, currentPageNum - 2); i <= Math.min(totalPages, currentPageNum + 2); i++) {
        const active = i === currentPageNum ? 'active' : '';
        pagination += `<li class="page-item ${active}"><a class="page-link" href="#" onclick="${loadFunction.name}(${i}); return false;">${i}</a></li>`;
    }
    
    // Next button
    if (currentPageNum < totalPages) {
        pagination += `<li class="page-item"><a class="page-link" href="#" onclick="${loadFunction.name}(${currentPageNum + 1}); return false;">بعدی</a></li>`;
    }
    
    pagination += '</ul>';
    container.innerHTML = pagination;
}

function exportData(type) {
    const params = new URLSearchParams({
        type: type,
        fromDate: document.getElementById('fromDate').value,
        toDate: document.getElementById('toDate').value,
        currency: document.getElementById('currencyFilter').value,
        customer: document.getElementById('customerFilter').value
    });
    
    window.location.href = `@Url.Action("ExportCustomerReports", "Reports")?${params}`;
}

function formatCurrency(amount, currencyCode) {
    if (currencyCode === 'IRR') {
        return new Intl.NumberFormat('fa-IR').format(amount) + ' ریال';
    }
    return new Intl.NumberFormat('en-US', {
        minimumFractionDigits: 2,
        maximumFractionDigits: 8
    }).format(amount) + ' ' + currencyCode;
}

function formatDate(dateString) {
    if (!dateString) return '-';
    const date = new Date(dateString);
    return date.toLocaleDateString('fa-IR');
}
</script>

<style>
.card {
    border-radius: 15px;
    border: 3px solid #e9ecef;
}

.card:hover {
    border-color: #e9ecef;
    transition: border-color 0.3s ease;
}

.nav-tabs .nav-link {
    border-radius: 10px 10px 0 0;
    border: 2px solid transparent;
    margin-right: 2px;
}

.nav-tabs .nav-link.active {
    border-color: #6c757d #6c757d #fff #6c757d;
    font-weight: bold;
}

.table th {
    border-top: none;
    font-weight: 600;
    background-color: #343a40;
    color: white;
}

.badge {
    font-size: 0.75rem;
    padding: 0.375em 0.75em;
}

.page-link {
    border-radius: 8px;
    margin: 0 2px;
    border: 2px solid #dee2e6;
}

.page-item.active .page-link {
    background-color: #6c757d;
    border-color: #6c757d;
}

.btn {
    border-radius: 8px;
    border-width: 2px;
}

.form-control, .form-select {
    border-radius: 8px;
    border: 2px solid #ced4da;
}

.form-control:focus, .form-select:focus {
    border-color: #6c757d;
    box-shadow: 0 0 0 0.2rem rgba(108, 117, 125, 0.25);
}

/* Currency styling consistency */
.text-end {
    text-align: left !important;
}

/* RTL adjustments */
.me-1 { margin-left: 0.25rem !important; margin-right: 0 !important; }
.me-2 { margin-left: 0.5rem !important; margin-right: 0 !important; }

/* Clickable elements */
a:not(.btn):not(.page-link) {
    color: #007bff;
    text-decoration: none;
}

a:not(.btn):not(.page-link):hover {
    color: #0056b3;
    text-decoration: underline;
}

/* Loading states */
.spinner-border {
    width: 1.5rem;
    height: 1.5rem;
}

/* Mobile responsiveness */
@@media (max-width: 768px) {
    .table-responsive {
        font-size: 0.875rem;
    }
    
    .nav-tabs .nav-link {
        font-size: 0.875rem;
        padding: 0.5rem 0.75rem;
    }
}
</style>
