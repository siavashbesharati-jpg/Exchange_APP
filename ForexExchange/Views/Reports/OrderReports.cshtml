@{
    ViewData["Title"] = "گزارشات معاملات";
}

<div class="container-fluid">
    <!-- Header with Back Button -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h2><i class="fas fa-exchange-alt text-success me-2"></i>گزارشات معاملات</h2>
                    <p class="text-muted">تحلیل جامع معاملات، حجم تراکنش‌ها و آمارهای تبدیل ارز</p>
                </div>
                <a href="@Url.Action("Index", "Reports")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-right me-1"></i>بازگشت به فهرست گزارشات
                </a>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-filter me-2"></i>فیلترهای جستجو</h5>
                    <div class="row g-3">
                        <div class="col-md-2">
                            <label class="form-label">از تاریخ</label>
                            <input type="date" class="form-control" id="fromDate">
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">تا تاریخ</label>
                            <input type="date" class="form-control" id="toDate">
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">ارز مبدأ</label>
                            <select class="form-select" id="fromCurrency">
                                <option value="">در حال بارگذاری...</option>
                            </select>
                        </div>
                        <div class="col-md-2">
                            <label class="form-label">ارز مقصد</label>
                            <select class="form-select" id="toCurrency">
                                <option value="">در حال بارگذاری...</option>
                            </select>
                        </div>
                        <div class="col-md-4">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-success w-100" onclick="loadOrderReports()">
                                <i class="fas fa-search me-1"></i>جستجو
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

   

    <!-- Orders Table -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-table me-2"></i>جدول تفصیلی معاملات</h5>
                    <button class="btn btn-success btn-sm" onclick="exportOrderData()">
                        <i class="fas fa-file-excel me-1"></i> دریافت اکسل 
                    </button>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover" id="ordersTable">
                            <thead class="table-dark">
                                <tr>
                                    <th class="sortable" data-column="id">شناسه <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="createdAt">تاریخ <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="customerName">مشتری <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="fromCurrency">از ارز <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="amount">مبلغ <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="toCurrency">به ارز <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="rate">نرخ تبدیل <i class="fas fa-sort"></i></th>
                                    <th class="sortable" data-column="totalValue">مبلغ نهایی <i class="fas fa-sort"></i></th>
                                    <th>عملیات</th>
                                </tr>
                            </thead>
                            <tbody id="ordersTableBody">
                                <tr>
                                    <td colspan="9" class="text-center py-5">
                                        <div class="spinner-border text-success" role="status">
                                            <span class="visually-hidden">در حال بارگذاری...</span>
                                        </div>
                                        <p class="mt-2 text-muted">در حال بارگذاری اطلاعات...</p>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
<script>
let ordersData = []; // Store orders data for sorting
let currentSort = { column: null, direction: 'asc' };

document.addEventListener('DOMContentLoaded', function() {
    // Set default dates
    const today = new Date();
    const lastMonth = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
    
    document.getElementById('fromDate').value = lastMonth.toISOString().split('T')[0];
    document.getElementById('toDate').value = today.toISOString().split('T')[0];
    
    // Load currencies for filter selters
    loadCurrenciesForFilters();
    
    // Add click event listeners to sortable headers
    document.querySelectorAll('.sortable').forEach(header => {
        header.addEventListener('click', function() {
            const column = this.getAttribute('data-column');
            sortTable(column);
        });
        header.style.cursor = 'pointer';
    });
    
    loadOrderReports();
});

function loadCurrenciesForFilters() {
    fetch('@Url.Action("GetCurrencies", "Api")')
        .then(response => response.json())
        .then(currencies => {
            const fromSelect = document.getElementById('fromCurrency');
            const toSelect = document.getElementById('toCurrency');
            
            // Clear loading options and add "همه" option
            fromSelect.innerHTML = '<option value="">همه</option>';
            toSelect.innerHTML = '<option value="">همه</option>';

            if (Array.isArray(currencies)) {
                currencies.forEach(currency => {
                    const option = `<option value="${currency.code}">${currency.name} (${currency.code})</option>`;
                    fromSelect.innerHTML += option;
                    toSelect.innerHTML += option;
                });
            }
        })
        .catch(error => {
            const fromSelect = document.getElementById('fromCurrency');
            const toSelect = document.getElementById('toCurrency');
            fromSelect.innerHTML = '<option value="">خطا در بارگذاری ارزها</option>';
            toSelect.innerHTML = '<option value="">خطا در بارگذاری ارزها</option>';
        });
}

function loadOrderReports() {
    // Load table data
    loadOrdersTable();
}

function loadOrdersTable() {
    const tbody = document.getElementById('ordersTableBody');
    tbody.innerHTML = `
        <tr>
            <td colspan="10" class="text-center py-5">
                <div class="spinner-border text-success" role="status">
                    <span class="visually-hidden">در حال بارگذاری...</span>
                </div>
                <p class="mt-2 text-muted">در حال بارگذاری اطلاعات...</p>
            </td>
        </tr>
    `;
    
    const fromDate = document.getElementById('fromDate').value;
    const toDate = document.getElementById('toDate').value;
    const fromCurrency = document.getElementById('fromCurrency').value;
    const toCurrency = document.getElementById('toCurrency').value;
    
    const url = `@Url.Action("GetOrdersData", "Reports")?fromDate=${fromDate}&toDate=${toDate}` +
                (fromCurrency ? `&fromCurrency=${fromCurrency}` : '') +
                (toCurrency ? `&toCurrency=${toCurrency}` : '');
    
    fetch(url)
    .then(response => response.json())
    .then(data => {
        tbody.innerHTML = '';
        
        if (data.error) {
            tbody.innerHTML = `
                <tr>
                    <td colspan="9" class="text-center py-5 text-danger">
                        <i class="fas fa-exclamation-triangle"></i>
                        ${data.error}
                    </td>
                </tr>
            `;
            return;
        }
        
        if (data.orders && data.orders.length > 0) {
            ordersData = data.orders; // Store data for sorting
            renderOrdersTable(ordersData);
        } else {
            tbody.innerHTML = `
                <tr>
                    <td colspan="9" class="text-center py-4 text-muted">
                        <i class="fas fa-inbox fa-2x mb-2"></i>
                        <p>هیچ معامله‌ای یافت نشد</p>
                    </td>
                </tr>
            `;
        }
    })
    .catch(error => {
        tbody.innerHTML = `
            <tr>
                <td colspan="9" class="text-center py-4 text-danger">
                    <i class="fas fa-exclamation-triangle fa-2x mb-2"></i>
                    <p>خطا در بارگذاری اطلاعات</p>
                </td>
            </tr>
        `;
    });
}

function renderOrdersTable(orders) {
    const tbody = document.getElementById('ordersTableBody');
    tbody.innerHTML = '';
    
    orders.forEach(order => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${order.id}</td>
            <td>${new Date(order.createdAt).toLocaleDateString('en-GB')}</td>
            <td>
                <div class="d-flex align-items-center">
                    <div class="avatar-sm bg-success text-white rounded-circle me-2 d-flex align-items-center justify-content-center">
                        ${order.customerName.charAt(0)}
                    </div>
                    ${order.customerName}
                </div>
            </td>
            <td><span class="badge bg-primary">${order.fromCurrency}</span></td>
            <td data-no-format="true" data-skip-format="true" class="skip-auto-format">${formatCurrency(order.amount, order.fromCurrency)}</td>
            <td><span class="badge bg-info">${order.toCurrency}</span></td>
            <td>${order.rate}</td>
            <td data-no-format="true" data-skip-format="true" class="skip-auto-format">${formatCurrency(order.totalValue, order.toCurrency)}</td>
            <td>
                <button class="btn btn-sm btn-outline-primary" onclick="viewOrderDetails(${order.id})">
                    <i class="fas fa-eye"></i>
                </button>
            </td>
        `;
        tbody.appendChild(row);
    });
}

function sortTable(column) {
    // Toggle sort direction
    if (currentSort.column === column) {
        currentSort.direction = currentSort.direction === 'asc' ? 'desc' : 'asc';
    } else {
        currentSort.column = column;
        currentSort.direction = 'asc';
    }
    
    // Update sort icons
    document.querySelectorAll('.sortable i').forEach(icon => {
        icon.className = 'fas fa-sort';
    });
    
    const currentHeader = document.querySelector(`[data-column="${column}"] i`);
    if (currentSort.direction === 'asc') {
        currentHeader.className = 'fas fa-sort-up';
    } else {
        currentHeader.className = 'fas fa-sort-down';
    }
    
    // Sort the data
    const sortedData = [...ordersData].sort((a, b) => {
        let valueA = a[column];
        let valueB = b[column];
        
        // Handle different data types
        if (column === 'createdAt') {
            valueA = new Date(valueA);
            valueB = new Date(valueB);
        } else if (column === 'amount' || column === 'rate' || column === 'totalValue' || column === 'id') {
            valueA = parseFloat(valueA) || 0;
            valueB = parseFloat(valueB) || 0;
        } else {
            valueA = valueA.toString().toLowerCase();
            valueB = valueB.toString().toLowerCase();
        }
        
        if (currentSort.direction === 'asc') {
            return valueA > valueB ? 1 : -1;
        } else {
            return valueA < valueB ? 1 : -1;
        }
    });
    
    renderOrdersTable(sortedData);
}

function viewOrderDetails(orderId) {
    window.location.href = `@Url.Action("Details", "Orders")/${orderId}`;
}

function exportOrderData() {
    const fromDate = document.getElementById('fromDate').value;
    const toDate = document.getElementById('toDate').value;
    const fromCurrency = document.getElementById('fromCurrency').value;
    const toCurrency = document.getElementById('toCurrency').value;
    
    const params = new URLSearchParams();
    params.append('type', 'orders');
    
    if (fromDate) params.append('fromDate', fromDate);
    if (toDate) params.append('toDate', toDate);
    if (fromCurrency) params.append('fromCurrency', fromCurrency);
    if (toCurrency) params.append('toCurrency', toCurrency);
    
    window.location.href = `@Url.Action("ExportToExcel", "Reports")?${params.toString()}`;
}

function formatNumber(num) {
    if (num === 0) return '0';
    return num.toLocaleString('fa-IR');
}
</script>
}

<style>
.avatar-sm {
    width: 32px;
    height: 32px;
    font-size: 0.875rem;
}

.table th {
    border-top: none;
    font-weight: 600;
}

.card {
    border-radius: 10px;
}

.badge {
    font-size: 0.75rem;
}

.sortable {
    cursor: pointer;
    user-select: none;
}



.sortable i {
    margin-left: 5px;
    opacity: 0.7;
}

.sortable:hover i {
    opacity: 1;
}
</style>
