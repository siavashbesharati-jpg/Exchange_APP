@{
    ViewData["Title"] = "گزارشات صندوق ها";
}

<div class="container-fluid">
    <!-- Header with Back Button -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex align-items-center justify-content-between">
                <div>
                    <h2><i class="fas fa-coins text-info me-2"></i>گزارشات صندوق ها</h2>
                    <p class="text-muted">تاریخچه و تحلیل تراکنش‌های صندوق ها</p>
                </div>
                <a href="@Url.Action("Index", "Reports")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-right me-1"></i>بازگشت به فهرست گزارشات
                </a>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h5 class="card-title"><i class="fas fa-filter me-2"></i>فیلترها</h5>
                    <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">انتخاب ارز</label>
                            <select class="form-select" id="currencySelect">
                                <option value="">انتخاب ارز</option>
                                <!-- Options will be loaded dynamically -->
                            </select>
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">از تاریخ</label>
                            <input type="date" class="form-control" id="fromDate">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">تا تاریخ</label>
                            <input type="date" class="form-control" id="toDate">
                        </div>
                        <div class="col-md-3">
                            <label class="form-label">&nbsp;</label>
                            <button class="btn btn-info w-100" onclick="loadPoolTimeline()">
                                <i class="fas fa-search me-1"></i>جستجو
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Summary Cards -->
    <div class="row mb-4" id="summaryCards">
        <!-- Cards will be loaded dynamically -->
    </div>

    <!-- Timeline Section -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="mb-0"><i class="fas fa-timeline me-2"></i>جدول زمانی مالی</h5>
                    <div>
                        <button class="btn btn-success btn-sm me-2" onclick="exportToExcel()">
                            <i class="fas fa-file-excel me-1"></i> دریافت اکسل 
                        </button>
                        <button class="btn btn-info btn-sm" onclick="refreshTimeline()">
                            <i class="fas fa-sync-alt me-1"></i>بروزرسانی
                        </button>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div id="timelineContainer" class="timeline-container">
                        <!-- Timeline will be loaded here -->
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.timeline-container {
    max-height: 600px;
    overflow-y: auto;
    padding: 1rem;
}

.timeline-item {
    border-left: 3px solid #dee2e6;
    padding-left: 1rem;
    margin-bottom: 1rem;
    position: relative;
}

.timeline-item:before {
    content: '';
    position: absolute;
    left: -6px;
    top: 8px;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #6c757d;
}

.timeline-item.initial:before {
    background: #28a745;
}

.timeline-item.order:before {
    background: #007bff;
}

.timeline-item.manual:before {
    background: #ffc107;
}

.timeline-item-header {
    display: flex;
    justify-content: between;
    align-items: center;
    margin-bottom: 0.5rem;
}

.timeline-item-content {
    background: #f8f9fa;
    padding: 0.75rem;
    border-radius: 8px;
    border: 1px solid #e9ecef;
}

.amount-positive {
    color: #28a745;
    font-weight: bold;
}

.amount-negative {
    color: #dc3545;
    font-weight: bold;
}

.amount-zero {
    color: #6c757d;
}

.balance-display {
    background: #e3f2fd;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-weight: 600;
    color: #1976d2;
}

.transaction-link {
    cursor: pointer;
    color: #007bff;
    text-decoration: none;
    transition: all 0.2s;
    font-weight: 500;
    border-bottom: 1px dotted #007bff;
}

.transaction-link:hover {
    color: #0056b3;
    text-decoration: none;
    border-bottom: 1px solid #0056b3;
    background-color: rgba(0, 123, 255, 0.1);
    padding: 2px 4px;
    border-radius: 3px;
}

.transaction-badge {
    background: #e9ecef;
    color: #6c757d;
    padding: 0.25rem 0.5rem;
    border-radius: 4px;
    font-size: 0.875rem;
}

.loading-container {
    text-align: center;
    padding: 3rem;
}

.loading-spinner {
    width: 3rem;
    height: 3rem;
}

.card {
    border-radius: 10px;
}

.summary-card {
    transition: transform 0.2s;
}

.summary-card:hover {
    transform: translateY(-2px);
}
</style>

<script>
let timelineData = [];

document.addEventListener('DOMContentLoaded', function() {
    loadCurrencies();
    clearTimeline(); // Show message to select currency
});

async function loadCurrencies() {
    try {
        const response = await fetch('@Url.Action("GetPoolCurrencies", "Reports")');
        const data = await response.json();
        
        if (data.success) {
            const select = document.getElementById('currencySelect');
            select.innerHTML = '<option value="">انتخاب ارز</option>';
            
            data.currencies.forEach(currency => {
                const option = document.createElement('option');
                option.value = currency.code;
                option.textContent = `${currency.name} (${currency.code})`;
                select.appendChild(option);
            });
        }
    } catch (error) {
    }
}

async function loadPoolTimeline() {
    const currencyCode = document.getElementById('currencySelect').value;
    const fromDate = document.getElementById('fromDate').value;
    const toDate = document.getElementById('toDate').value;
    
    // Only load data when a currency is selected
    if (!currencyCode) {
        clearTimeline();
        clearSummaryCards();
        return;
    }
    
    showLoading();
    
    try {
        const params = new URLSearchParams();
        params.append('currencyCode', currencyCode);
        if (fromDate) params.append('fromDate', fromDate);
        if (toDate) params.append('toDate', toDate);
        
        const response = await fetch(`@Url.Action("GetPoolTimeline", "Reports")?${params}`);
        const data = await response.json();
        
        if (data.timeline && data.timeline.length > 0) {
        }
        
        if (data.success) {
            timelineData = data.timeline;
            renderTimeline(data.timeline);
            renderSummaryCards(data.summary);
        } else {
            showError('خطا در بارگذاری اطلاعات: ' + (data.error || 'نامشخص'));
        }
    } catch (error) {
        showError('خطا در ارتباط با سرور');
    }
}

function renderTimeline(timeline) {
    const container = document.getElementById('timelineContainer');
    
    if (!timeline || timeline.length === 0) {
        container.innerHTML = `
            <div class="text-center p-5">
                <i class="fas fa-info-circle fa-3x text-muted mb-3"></i>
                <h5 class="text-muted">هیچ تراکنشی یافت نشد</h5>
                <p class="text-muted">برای این ارز و بازه زمانی انتخابی تراکنشی وجود ندارد.</p>
            </div>
        `;
        return;
    }
    
    let html = '';
    
    timeline.forEach(item => {
        const amountClass = item.amount > 0 ? 'amount-positive' : 
                          item.amount < 0 ? 'amount-negative' : 'amount-zero';
        const typeClass = item.transactionType.toLowerCase();
        
        let transactionElement;
        if (item.canNavigate && item.referenceId) {
            transactionElement = `
                <a href="#" class="transaction-link" onclick="navigateToTransaction('${item.transactionType}', ${item.referenceId})" title="کلیک کنید تا جزئیات معامله را مشاهده کنید">
                    <i class="fas fa-external-link-alt me-1"></i>${item.description}
                </a>
            `;
        } else {
            transactionElement = `<span class="transaction-badge">${item.description}</span>`;
        }
        
        html += `
            <div class="timeline-item ${typeClass}">
                <div class="timeline-item-header">
                    <div>
                        <strong>${item.date}</strong> - <span class="text-muted">${item.time}</span>
                    </div>
                    <div class="text-end">
                        <span class="badge bg-secondary">${item.currencyCode}</span>
                    </div>
                </div>
                <div class="timeline-item-content">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            ${transactionElement}
                        </div>
                        <div class="col-md-3 text-center">
                            <span class="${amountClass}" dir="ltr">
                                ${formatNumber(item.amount)} ${item.currencyCode}
                            </span>
                        </div>
                        <div class="col-md-3 text-end">
                            <span class="balance-display" dir="ltr">
                                ${formatNumber(item.balance)} ${item.currencyCode}
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        `;
    });
    
    container.innerHTML = html;
}

function renderSummaryCards(summary) {
    const container = document.getElementById('summaryCards');
    
    if (!summary) {
        container.innerHTML = '';
        return;
    }
    
    let balanceCards = '';
    if (summary.currencyBalances) {
        Object.entries(summary.currencyBalances).forEach(([currency, balance]) => {
            balanceCards += `
                <div class="col-md-3">
                    <div class="card text-center h-100 border-0 shadow-sm summary-card">
                        <div class="card-body">
                            <i class="fas fa-coins text-info mb-2" style="font-size: 2rem;"></i>
                            <h4 class="text-info">${formatNumber(balance)}</h4>
                            <small class="text-muted">موجودی ${currency}</small>
                        </div>
                    </div>
                </div>
            `;
        });
    }
    
    container.innerHTML = `
        <div class="col-md-3">
            <div class="card text-center h-100 border-0 shadow-sm summary-card">
                <div class="card-body">
                    <i class="fas fa-list-ol text-primary mb-2" style="font-size: 2rem;"></i>
                    <h4 class="text-primary">${summary.totalTransactions || 0}</h4>
                    <small class="text-muted">کل تراکنش‌ها</small>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card text-center h-100 border-0 shadow-sm summary-card">
                <div class="card-body">
                    <i class="fas fa-calendar-day text-success mb-2" style="font-size: 2rem;"></i>
                    <h4 class="text-success">${summary.todayTransactions || 0}</h4>
                    <small class="text-muted">تراکنش‌های امروز</small>
                </div>
            </div>
        </div>
        ${balanceCards}
    `;
}

function navigateToTransaction(type, referenceId) {
    if (type === 'Order') {
        // Show a brief loading indication
        showNotification('در حال باز کردن جزئیات معامله...', 'info');
        
        // Open order details in new tab
        const url = `@Url.Action("Details", "Orders")/${referenceId}`;
        const newWindow = window.open(url, '_blank');
        
        // Focus on the new window if popup blocker didn't block it
        if (newWindow) {
            newWindow.focus();
        } else {
            showNotification('پاپ آپ مسدود شد. لطفاً اجازه نمایش پاپ آپ را بدهید.', 'warning');
        }
    }
}

function showLoading() {
    document.getElementById('timelineContainer').innerHTML = `
        <div class="loading-container">
            <div class="spinner-border loading-spinner text-info" role="status">
                <span class="visually-hidden">در حال بارگذاری...</span>
            </div>
            <p class="mt-3 text-muted">در حال بارگذاری تاریخچه مالی...</p>
        </div>
    `;
    
    document.getElementById('summaryCards').innerHTML = `
        <div class="col-12 text-center">
            <div class="spinner-border text-info" role="status"></div>
        </div>
    `;
}

function showError(message) {
    document.getElementById('timelineContainer').innerHTML = `
        <div class="text-center p-5">
            <i class="fas fa-exclamation-triangle fa-3x text-danger mb-3"></i>
            <h5 class="text-danger">خطا در بارگذاری</h5>
            <p class="text-muted">${message}</p>
            <button class="btn btn-outline-info" onclick="loadPoolTimeline()">
                <i class="fas fa-redo me-1"></i>تلاش مجدد
            </button>
        </div>
    `;
}

function exportToExcel() {
    if (timelineData.length === 0) {
        alert('هیچ داده‌ای برای صدور وجود ندارد');
        return;
    }
    
    const currencyCode = document.getElementById('currencySelect').value;
    const fromDate = document.getElementById('fromDate').value;
    const toDate = document.getElementById('toDate').value;
    
    const params = new URLSearchParams();
    params.append('type', 'pool');
    if (currencyCode) params.append('currencyCode', currencyCode);
    if (fromDate) params.append('fromDate', fromDate);
    if (toDate) params.append('toDate', toDate);
    
    window.location.href = `@Url.Action("ExportToExcel", "Reports")?${params}`;
}

function refreshTimeline() {
    loadPoolTimeline();
    showNotification('تاریخچه مالی بروزرسانی شد', 'success');
}

function clearTimeline() {
    const container = document.getElementById('timelineContainer');
    container.innerHTML = `
        <div class="text-center p-5">
            <i class="fas fa-coins fa-3x text-muted mb-3"></i>
            <h5 class="text-muted">انتخاب ارز</h5>
            <p class="text-muted">لطفاً ارز مورد نظر را از فهرست بالا انتخاب کنید.</p>
        </div>
    `;
}

function clearSummaryCards() {
    const container = document.getElementById('summaryCards');
    container.innerHTML = '';
}

function formatNumber(num) {
    if (num === 0) return '0';
    return num.toLocaleString('en-US', { maximumFractionDigits: 2 });
}

function showNotification(message, type) {
    const alertClass = type === 'success' ? 'alert-success' : 
                      type === 'warning' ? 'alert-warning' : 'alert-info';
    const iconClass = type === 'success' ? 'fa-check-circle' : 
                     type === 'warning' ? 'fa-exclamation-triangle' : 'fa-info-circle';
    
    const notification = document.createElement('div');
    notification.className = `alert ${alertClass} position-fixed top-0 end-0 m-3`;
    notification.style.zIndex = '9999';
    notification.innerHTML = `
        <i class="fas ${iconClass} me-2"></i>${message}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    document.body.appendChild(notification);
    
    setTimeout(() => {
        notification.remove();
    }, 3000);
}
</script>
