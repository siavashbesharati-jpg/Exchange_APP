<!DOCTYPE html>
<html lang="fa" dir="rtl">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - سامانه معاملات تابان </title>

    <!-- Open Graph Tags for WhatsApp and Social Media -->
    <meta property="og:title" content="@(ViewData["OGTitle"] ?? ViewData["Title"] ?? "سامانه معاملات تابان")" />
    <meta property="og:description"
        content="@(ViewData["OGDescription"] ?? "سامانه معاملات ارز تابان - بهترین نرخ‌های روز، معاملات امن و سریع")" />
    <meta property="og:image" content="@(ViewData["OGImage"] ?? Url.Content("~/images/og-image.jpg"))" />
    <meta property="og:image:alt" content="@(ViewData["OGImageAlt"] ?? "لوگو سامانه معاملات تابان")" />
    <meta property="og:url"
        content="@(ViewData["OGUrl"] ?? (Context.Request.Scheme + "://" + Context.Request.Host + Context.Request.Path))" />
    <meta property="og:type" content="@(ViewData["OGType"] ?? "website")" />
    <meta property="og:site_name" content="سامانه معاملات تابان" />
    <meta property="og:locale" content="fa_IR" />

    <!-- Twitter Card Tags -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content="@(ViewData["TwitterTitle"] ?? ViewData["Title"] ?? "سامانه معاملات تابان")" />
    <meta name="twitter:description"
        content="@(ViewData["TwitterDescription"] ?? ViewData["OGDescription"] ?? "سامانه معاملات ارز تابان - بهترین نرخ‌های روز، معاملات امن و سریع")" />
    <meta name="twitter:image"
        content="@(ViewData["TwitterImage"] ?? ViewData["OGImage"] ?? Url.Content("~/images/og-image.jpg"))" />

    <!-- WhatsApp Specific -->
    <meta property="whatsapp:title" content="@(ViewData["OGTitle"] ?? ViewData["Title"] ?? "سامانه معاملات تابان")" />
    <meta property="whatsapp:description"
        content="@(ViewData["OGDescription"] ?? "سامانه معاملات ارز تابان - بهترین نرخ‌های روز، معاملات امن و سریع")" />
    <meta property="whatsapp:image" content="@(ViewData["OGImage"] ?? Url.Content("~/images/og-image.jpg"))" />

    <!-- Bootstrap 5 RTL -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.rtl.min.css" rel="stylesheet">

    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <!-- Animate.css for modern animations -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">

    <!-- Select2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />

    <!-- Persian Fonts -->
    <link
        href="https://fonts.googleapis.com/css2?family=Vazirmatn:wght@100;200;300;400;500;600;700;800;900&display=swap"
        rel="stylesheet">

    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/currency-formatter.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/modern-notifications.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/ForexExchange.styles.css" asp-append-version="true" />

    <!-- Favicon -->
    <link rel="apple-touch-icon" sizes="180x180" href="~/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/favicon/favicon-16x16.png">
    <link rel="manifest" href="~/favicon/site.webmanifest">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="theme-color" content="#ffffff">

    <style>
        body {
            font-family: 'Vazirmatn', sans-serif;
            direction: rtl;
            padding-top: 20px;
        }

        .navbar-brand {
            font-weight: 600;
        }

        /* RTL SweetAlert2 Support */
        .rtl-swal-popup {
            direction: rtl;
            text-align: right;
        }

        .rtl-swal-title {
            text-align: center;
        }

        .rtl-swal-content {
            text-align: right;
        }

        /* Admin Notification Modal Styling */
        .admin-notification-modal {
            font-family: 'Vazirmatn', sans-serif;
            direction: rtl;
        }

        .admin-notification-modal .swal2-html-container {
            text-align: right;
        }

        .admin-notification-modal .swal2-actions {
            flex-direction: row-reverse;
        }

        .admin-notification-modal .swal2-confirm {
            margin-left: 10px !important;
            margin-right: 0 !important;
        }

        .admin-notification-modal .swal2-cancel {
            margin-right: 10px !important;
            margin-left: 0 !important;
        }

        /* Admin Notification Toast Styling (fallback) */
        .admin-notification-toast {
            font-family: 'Vazirmatn', sans-serif;
            direction: rtl;
        }

        .admin-notification-toast .swal2-html-container {
            text-align: right;
        }

        /* Connection status indicator */
        .connection-status {
            position: fixed;
            bottom: 20px;
            left: 20px;
            z-index: 1000;
            padding: 8px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            display: none;
        }

        .connection-status.connected {
            background-color: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .connection-status.disconnected {
            background-color: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }

        .connection-status.connecting {
            background-color: #fff3cd;
            color: #856404;
            border: 1px solid #ffeaa7;
        }
    </style>
    @RenderSection("Styles", required: false)
</head>

<body>

    <!-- Connection Status Indicator -->
    <div id="connectionStatus" class="connection-status">
        <i class="fas fa-circle"></i>
        <span id="connectionText">در حال اتصال...</span>
    </div>

    <div class="container" style="padding-bottom: 120px;">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @if (User.Identity?.IsAuthenticated == true)
    {
        @if (User.IsInRole("Admin") || User.IsInRole("Manager") || User.IsInRole("Staff"))
        {
            <!-- Admin Footer with Currency Pool Section -->
            <div class="fixed-bottom bg-light border-top shadow-lg" style="border-top: 3px solid #00000014 !important;">
                <div class="container-fluid">
                    <!-- Currency Pool Section -->
                    <div class="currency-pool-section p-2" id="currency-pool-section-admin" style="display: none;">
                        <div class="row" id="currency-pool-row-admin">
                            <!-- Currency pool data will be loaded here via AJAX -->
                        </div>
                    </div>

                    <!-- Elegant separator line -->
                    <div class="footer-separator"></div>

                    <!-- Action Links Section -->
                    <div class="p-3">
                        <div class="row">
                            <div class="col-12">
                                <div class="d-flex justify-content-center flex-wrap gap-2">
                                    <!-- Back to Dashboard -->
                                    <a href="@Url.Action("Dashboard", "Home")"
                                        class="btn btn-secondary btn-sm fw-normal flex-fill flex-sm-grow-0 @(ViewContext.RouteData.Values["action"]?.ToString() == "Dashboard" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"
                                        style="background-color: #6c757d; border-color: #6c757d; color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); @(ViewContext.RouteData.Values["action"]?.ToString() == "Dashboard" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "box-shadow: 0 0 10px rgba(108, 117, 125, 0.5); transform: scale(1.05);" : "")">
                                        <i class="fas fa-tachometer-alt me-1"></i>
                                        <span class="d-none d-sm-inline"> داشبورد</span>
                                        <span class="d-sm-none">داشبورد</span>
                                    </a>

                                    <!-- Add AccountDocument -->
                                    <a href="@Url.Action("Upload", "AccountingDocuments")"
                                        class="btn btn-success btn-sm fw-normal flex-fill flex-sm-grow-0 @(ViewContext.RouteData.Values["action"]?.ToString() == "Upload" && ViewContext.RouteData.Values["controller"]?.ToString() == "AccountingDocuments" ? "active" : "")"
                                        style="background-color: #28a745; border-color: #28a745; color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); @(ViewContext.RouteData.Values["action"]?.ToString() == "Upload" && ViewContext.RouteData.Values["controller"]?.ToString() == "AccountingDocuments" ? "box-shadow: 0 0 10px rgba(40, 167, 69, 0.5); transform: scale(1.05);" : "")">
                                        <i class="fas fa-file-invoice me-1"></i>
                                        <span class="d-none d-sm-inline">ثبت سند</span>
                                        <span class="d-sm-none">ثبت</span>
                                    </a>

                                    <!-- Create Order -->
                                    <a href="@Url.Action("Create", "Orders")"
                                        class="btn btn-primary btn-sm fw-normal flex-fill flex-sm-grow-0 @(ViewContext.RouteData.Values["action"]?.ToString() == "Create" && ViewContext.RouteData.Values["controller"]?.ToString() == "Orders" ? "active" : "")"
                                        style="background-color: #007bff; border-color: #007bff; color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); @(ViewContext.RouteData.Values["action"]?.ToString() == "Create" && ViewContext.RouteData.Values["controller"]?.ToString() == "Orders" ? "box-shadow: 0 0 10px rgba(0, 123, 255, 0.5); transform: scale(1.05);" : "")">
                                        <i class="fas fa-plus-circle me-1"></i>
                                        <span class="d-none d-sm-inline">ثبت معامله جدید</span>
                                        <span class="d-sm-none">معامله</span>
                                    </a>

                                    <!-- Create Customer -->
                                    <a href="@Url.Action("Create", "Customers")"
                                        class="btn btn-info btn-sm fw-normal flex-fill flex-sm-grow-0 @(ViewContext.RouteData.Values["action"]?.ToString() == "Create" && ViewContext.RouteData.Values["controller"]?.ToString() == "Customers" ? "active" : "")"
                                        style="background-color: #17a2b8; border-color: #17a2b8; color: white; text-shadow: 1px 1px 2px rgba(0,0,0,0.3); @(ViewContext.RouteData.Values["action"]?.ToString() == "Create" && ViewContext.RouteData.Values["controller"]?.ToString() == "Customers" ? "box-shadow: 0 0 10px rgba(23, 162, 184, 0.5); transform: scale(1.05);" : "")">
                                        <i class="fas fa-user-plus me-1"></i>
                                        <span class="d-none d-sm-inline">ثبت مشتری جدید</span>
                                        <span class="d-sm-none">مشتری</span>
                                    </a>

                                    <!-- Advanced Manage -->
                                    <a href="@Url.Action("Management", "Home")"
                                        class="btn btn-warning btn-sm fw-normal flex-fill flex-sm-grow-0 @(ViewContext.RouteData.Values["action"]?.ToString() == "Management" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "active" : "")"
                                        style="background-color: #ffc107; border-color: #ffc107; color: #212529; text-shadow: 1px 1px 2px rgba(255,255,255,0.3); @(ViewContext.RouteData.Values["action"]?.ToString() == "Management" && ViewContext.RouteData.Values["controller"]?.ToString() == "Home" ? "box-shadow: 0 0 10px rgba(255, 193, 7, 0.5); transform: scale(1.05);" : "")">
                                        <i class="fas fa-cogs me-1"></i>
                                        <span class="d-none d-sm-inline">مدیریت پیشرفته</span>
                                        <span class="d-sm-none">مدیریت</span>
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (User.IsInRole("Customer"))
        {
            <!-- Customer Profile Footer -->
            <div class="fixed-bottom bg-white border-top shadow-lg p-3">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-12">
                            <div class="d-flex justify-content-center">
                                <!-- Profile Link -->
                                <a href="@Url.Action("Profile", "Account")" class="btn btn-primary">
                                    <i class="fas fa-user me-2"></i>
                                    پروفایل من
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Login action in Footer -->
        <div class="fixed-bottom bg-white border-top shadow-lg p-3">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12">
                        <div class="d-flex justify-content-center">
                            <a class="btn btn-primary" asp-area="" asp-controller="Account" asp-action="Login">
                                <i class="fas fa-user me-2"></i>
                                ورود به سیستم
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; @DateTime.Now.Year - گروه تابان </a>
        </div>
    </footer>

    <!-- Bootstrap 5 RTL JS -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"
        integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Select2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>

    <!-- Select2 Persian Language -->
    <script src="~/js/select2-fa.js" asp-append-version="true"></script>

    <!-- SweetAlert2 -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <!-- Microsoft SignalR -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

    <!-- Animate.css for SweetAlert2 animations -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">

    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="~/js/admin-notifications.js" asp-append-version="true"></script>

    <!-- Select2 Global Initialization -->
    <script src="~/js/select2-init.js" asp-append-version="true"></script>

    <!-- Universal Currency Formatter -->
    <script src="~/js/currency-formatter.js" asp-append-version="true"></script>

    <!-- Currency Amount Formatter -->
    <script src="~/js/persian-number-converter.js" asp-append-version="true"></script>
    <script src="~/js/currency-amount-formatter.js" asp-append-version="true"></script>
    <script src="~/js/currency-form-helper.js" asp-append-version="true"></script>
    <script src="~/js/auto-currency-display-formatter.js" asp-append-version="true"></script>



    <!-- Currency Pool Footer Script -->
    <script>
        $(document).ready(function () {
            loadCurrencyPoolData();
        });

        function loadCurrencyPoolData() {
            $.ajax({
                url: '@Url.Action("GetAllPoolsForFooter", "PoolManagement")',
                type: 'GET',
                success: function (response) {
                    if (response.success && response.pools && response.pools.length > 0) {
                        displayCurrencyPools(response.pools);
                    }
                },
                error: function (xhr, status, error) {
                    console.error('Error loading currency pool data:', error);
                }
            });
        }

        // Currency to flag emoji mapping
        function getCurrencyFlag(currencyCode) {
            const currencyFlags = {
                'USD': '🇺🇸', // United States Dollar
                'EUR': '🇪🇺', // European Union Euro
                'GBP': '🇬🇧', // British Pound Sterling
                'JPY': '🇯🇵', // Japanese Yen
                'CHF': '🇨🇭', // Swiss Franc
                'CAD': '🇨🇦', // Canadian Dollar
                'AUD': '🇦🇺', // Australian Dollar
                'NZD': '🇳🇿', // New Zealand Dollar
                'SEK': '🇸🇪', // Swedish Krona
                'NOK': '🇳🇴', // Norwegian Krone
                'DKK': '🇩🇰', // Danish Krone
                'CNY': '🇨🇳', // Chinese Yuan
                'HKD': '🇭🇰', // Hong Kong Dollar
                'SGD': '🇸🇬', // Singapore Dollar
                'KRW': '🇰🇷', // South Korean Won
                'INR': '🇮🇳', // Indian Rupee
                'THB': '🇹🇭', // Thai Baht
                'MYR': '🇲🇾', // Malaysian Ringgit
                'IDR': '🇮🇩', // Indonesian Rupiah
                'PHP': '🇵🇭', // Philippine Peso
                'VND': '🇻🇳', // Vietnamese Dong
                'BRL': '🇧🇷', // Brazilian Real
                'MXN': '🇲🇽', // Mexican Peso
                'RUB': '🇷🇺', // Russian Ruble
                'TRY': '🇹🇷', // Turkish Lira
                'SAR': '🇸🇦', // Saudi Riyal
                'AED': '🇦🇪', // UAE Dirham
                'KWD': '🇰🇼', // Kuwaiti Dinar
                'QAR': '🇶🇦', // Qatari Riyal
                'BHD': '🇧🇭', // Bahraini Dinar
                'OMR': '🇴🇲', // Omani Rial
                'JOD': '🇯🇴', // Jordanian Dinar
                'LBP': '🇱🇧', // Lebanese Pound
                'EGP': '🇪🇬', // Egyptian Pound
                'MAD': '🇲🇦', // Moroccan Dirham
                'DZD': '🇩🇿', // Algerian Dinar
                'TND': '🇹🇳', // Tunisian Dinar
                'IQD': '🇮🇶', // Iraqi Dinar
                'SYP': '🇸🇾', // Syrian Pound
                'AFN': '🇦🇫', // Afghan Afghani
                'PKR': '🇵🇰', // Pakistani Rupee
                'BDT': '🇧🇩', // Bangladeshi Taka
                'LKR': '🇱🇰', // Sri Lankan Rupee
                'NPR': '🇳🇵', // Nepalese Rupee
                'BTN': '🇧🇹', // Bhutanese Ngultrum
                'IRR': '🇮🇷', // Iranian Rial
                'IRT': '🇮🇷', // Iranian Toman (same flag as IRR)
                'AMD': '🇦🇲', // Armenian Dram
                'AZN': '🇦🇿', // Azerbaijani Manat
                'GEL': '🇬🇪', // Georgian Lari
                'KZT': '🇰🇿', // Kazakhstani Tenge
                'KGS': '🇰🇬', // Kyrgyzstani Som
                'TJS': '🇹🇯', // Tajikistani Somoni
                'TMT': '🇹🇲', // Turkmenistani Manat
                'UZS': '🇺🇿', // Uzbekistani Som
                'ZAR': '🇿🇦', // South African Rand
                'NGN': '🇳🇬', // Nigerian Naira
                'KES': '🇰🇪', // Kenyan Shilling
                'GHS': '🇬🇭', // Ghanaian Cedi
                'ETB': '🇪🇹', // Ethiopian Birr
                'UGX': '🇺🇬', // Ugandan Shilling
                'TZS': '🇹🇿', // Tanzanian Shilling
                'RWF': '🇷🇼', // Rwandan Franc
                'XOF': '🌍', // West African CFA Franc
                'XAF': '🌍', // Central African CFA Franc
                'COP': '🇨🇴', // Colombian Peso
                'PEN': '🇵🇪', // Peruvian Sol
                'CLP': '🇨🇱', // Chilean Peso
                'ARS': '🇦🇷', // Argentine Peso
                'UYU': '🇺🇾', // Uruguayan Peso
                'PYG': '🇵🇾', // Paraguayan Guarani
                'BOB': '🇧🇴', // Bolivian Boliviano
                'VES': '🇻🇪', // Venezuelan Bolívar
                'GYD': '🇬🇾', // Guyanese Dollar
                'SRD': '🇸🇷', // Surinamese Dollar
                'FKP': '🇫🇰', // Falkland Islands Pound
                'BTC': '₿', // Bitcoin (using Bitcoin symbol)
                'ETH': 'Ξ', // Ethereum (using Ethereum symbol)
                'USDT': '₮', // Tether (using Tether symbol)
                'USDC': 'Ⓒ', // USD Coin
                'BNB': 'Ⓑ', // Binance Coin
                'ADA': 'Ⓐ', // Cardano
                'SOL': 'Ⓢ', // Solana
                'DOT': 'Ⓓ', // Polkadot
                'MATIC': 'Ⓜ', // Polygon
                'LTC': 'Ł', // Litecoin
                'DOGE': 'Ð', // Dogecoin
                'SHIB': '🐕', // Shiba Inu
                'AVAX': '🔺', // Avalanche
                'TRX': 'Ⓣ', // Tron
                'UNI': '🦄', // Uniswap
                'LINK': '🔗', // Chainlink
                'XRP': '⚡', // Ripple
                'XLM': '⭐', // Stellar
                'VET': '✔️', // VeChain
                'FIL': '📁', // Filecoin
                'THETA': 'Θ', // Theta Network
                'ICP': '∞', // Internet Computer
                'ALGO': '△', // Algorand
                'XTZ': 'ꜩ', // Tezos
                'ATOM': '⚛️', // Cosmos
                'CRO': '♢', // Crypto.com Coin
                'NEAR': '◯', // NEAR Protocol
                'SAND': '🏖️', // The Sandbox
                'MANA': '🎮', // Decentraland
                'AXS': '🎯', // Axie Infinity
                'ENJ': '🎲', // Enjin Coin
                'CHZ': '🏟️', // Chiliz
                'BAT': '🦇', // Basic Attention Token
                'ZIL': '◊', // Zilliqa
                'ONE': '1️⃣', // Harmony
                'HOT': '🔥', // Holo
                'IOST': '🌐', // IOST
                'ONT': '⭕', // Ontology
                'ICX': '❄️', // ICON
                'ZRX': '0️⃣', // 0x Protocol
                'REP': '📊', // Augur
                'KNC': '🔵', // Kyber Network Crystal
                'LRC': '⭕', // Loopring
                'SNX': '📈', // Synthetix Network Token
                'COMP': '🏛️', // Compound
                'YFI': '🏦', // yearn.finance
                'SUSHI': '🍣', // SushiSwap
                'CRV': '📈', // Curve DAO Token
                'AAVE': '👻', // Aave
                'MKR': '🏭', // Maker
                'REN': '🔄', // Republic Protocol
                'KSM': '🐦', // Kusama
                'DASH': '💨', // Dash
                'ZEC': '🛡️', // Zcash
                'XMR': '🕵️', // Monero
                'DCR': '💎', // Decred
                'SC': '☁️', // Siacoin
                'DGB': '⚡', // DigiByte
                'RVN': '🐦‍⬛', // Ravencoin
                'BTG': '🟨', // Bitcoin Gold
                'BCH': '💚', // Bitcoin Cash
                'BSV': '🔶', // Bitcoin SV
                'ETC': '💚', // Ethereum Classic
                'XEM': '🔶', // NEM
                'WAVES': '🌊', // Waves
                'LSK': '🔗', // Lisk
                'STRAT': '⚡', // Stratis
                'ARK': '🚢', // Ark
                'PIVX': '🔒', // PIVX
                'NAV': '⚡', // NavCoin
                'PART': '🔐', // Particl
                'BLK': '⚫', // BlackCoin
                'BLOCK': '🧱', // Blocknet
                'SYS': '⚙️', // Syscoin
                'VIA': '🛣️', // Viacoin
                'VTC': '🟢', // Vertcoin
                'GRS': '💎', // Groestlcoin
                'MONA': '🐱', // MonaCoin
                'DGD': '🏆', // DigixDAO
                'GNT': '🤖', // Golem
                'ANT': '🐜', // Aragon
                'BAL': '⚖️', // Balancer
                'BAND': '📻', // Band Protocol
                'NMR': '🧮', // Numeraire
                'MLN': '🚀', // Enzyme
                'LPT': '📹', // Livepeer
                'STORJ': '☁️', // Storj
                'GRT': '📊', // The Graph
                'OCEAN': '🌊', // Ocean Protocol
                'FET': '🤖', // Fetch.ai
                'AGIX': '🧠', // SingularityNET
                'RLC': '☁️', // iExec RLC
                'NKN': '🌐', // NKN
                'API3': '🔌', // API3
                'CELR': '⚡', // Celer Network
                'CTK': '🔐', // CertiK
                'DENT': '📱', // Dent
                'WIN': '🎰' // WINkLink
            };
            
            return currencyFlags[currencyCode] || '💱'; // Default to generic currency exchange emoji
        }

        function displayCurrencyPools(pools) {
            // Clear admin container
            $('#currency-pool-row-admin').empty();

            // Calculate column width and offset based on number of currencies
            const poolCount = pools.length;
            let colClass = 'col-12';
            let offsetClass = '';

            if (poolCount <= 2) {
                colClass = 'col-6';
            } else if (poolCount <= 3) {
                colClass = 'col-4';
            } else if (poolCount <= 4) {
                colClass = 'col-3';
            } else if (poolCount <= 6) {
                colClass = 'col-2';
            } else if (poolCount === 7) {
                colClass = 'col-1';
                offsetClass = 'offset-2'; // Center 7 columns: (12-7)/2 = 2.5, rounded down to 2
            } else if (poolCount === 8) {
                colClass = 'col-1';
                offsetClass = 'offset-2'; // Center 8 columns: (12-8)/2 = 2
            } else if (poolCount === 9) {
                colClass = 'col-1';
                offsetClass = 'offset-1'; // Center 9 columns: (12-9)/2 = 1.5, rounded down to 1
            } else if (poolCount === 10) {
                colClass = 'col-1';
                offsetClass = 'offset-1'; // Center 10 columns: (12-10)/2 = 1
            } else if (poolCount === 11) {
                colClass = 'col-1';
                offsetClass = ''; // 11 columns, only 1 empty space, no offset needed
            } else {
                colClass = 'col-1';
            }

            const poolsHtml = pools.map(function (pool, index) {
                const firstItemClass = index === 0 && offsetClass ? offsetClass : '';
                const flagEmoji = getCurrencyFlag(pool.currencyCode);
                return `
                    <div class="${colClass} ${firstItemClass} text-center border-end currency-pool-item">
                        <div class="currency-pool-flag" style="font-size: 1.5rem; margin-bottom: 2px;" title="${pool.currencyCode}">${flagEmoji}</div>
                        <div class="currency-pool-code text-muted small">${pool.currencyCode}</div>
                        <div class="currency-pool-balance ${pool.balance >= 0 ? 'text-success' : 'text-danger'}">
                            ${formatNumber(pool.balance)}
                        </div>
                    </div>
                `;
            }).join('');

            // Add to admin container only and show admin section
            $('#currency-pool-row-admin').html(poolsHtml);
            $('#currency-pool-section-admin').show();
        }

        function formatNumber(num) {
            if (num === 0) return '0';
            return num.toLocaleString('fa-IR', {
                minimumFractionDigits: 0,
                maximumFractionDigits: 2
            });
        }
    </script>

    @await RenderSectionAsync("Scripts", required: false)

    <!-- Modern Notification Test Button (Only for Development) -->
    @if (Context.Request.Host.Host == "localhost")
    {
        <div class="modern-notification-test-fab" onclick="testModernNotifications()">
            <i class="fas fa-bell"></i>
        </div>
    }

    <style>
        .modern-notification-test-fab {
            position: fixed;
            bottom: 140px;
            left: 20px;
            width: 56px;
            height: 56px;
            background: linear-gradient(145deg, #3b82f6, #2563eb);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            cursor: pointer;
            box-shadow: 0 4px 20px rgba(59, 130, 246, 0.4);
            transition: all 0.3s ease;
            z-index: 1050;
            font-size: 20px;
        }

        .modern-notification-test-fab:hover {
            transform: scale(1.1);
            box-shadow: 0 8px 30px rgba(59, 130, 246, 0.6);
        }

        /* Responsive positioning for mobile */
        @@media (max-width: 576px) {
            .modern-notification-test-fab {
                bottom: 160px;
                width: 48px;
                height: 48px;
                font-size: 18px;
            }
        }
    </style>

    <script>
        function testModernNotifications() {
            if (window.adminNotificationManager) {
                const testNotifications = [
                    {
                        title: 'معامله جدید',
                        message: 'معامله جدید ثبت شد\n\nمشتری: علی احمدی\nمبلغ: 1,000\nارز مبدا: USD\nارز مقصد: IRR',
                        type: 'success',
                        timestamp: new Date(),
                        data: {
                            orderId: 1234,
                            customerName: 'علی احمدی',
                            amount: 1000,
                            fromCurrency: 'USD',
                            toCurrency: 'IRR'
                        }
                    },
                    {
                        title: '⚠️ موجودی استخر صفر شد',
                        message: 'موجودی USD به صفر رسید!\n\n5,000 → 0\n\nنیاز به تامین فوری',
                        type: 'warning',
                        timestamp: new Date(),
                        data: {
                            currencyCode: 'USD',
                            oldBalance: 5000,
                            newBalance: 0
                        }
                    },
                    {
                        title: '🚨 موجودی استخر منفی شد',
                        message: 'موجودی EUR منفی شد!\n\n100 → -500\n\nوضعیت اضطراری',
                        type: 'error',
                        timestamp: new Date(),
                        data: {
                            currencyCode: 'EUR',
                            oldBalance: 100,
                            newBalance: -500
                        }
                    },
                    {
                        title: 'خطا در پردازش',
                        message: 'خطا در پردازش درخواست\n\nلطفاً دوباره تلاش کنید',
                        type: 'error',
                        timestamp: new Date(),
                        data: {
                            errorCode: 'ERR_001',
                            action: 'Process Payment'
                        }
                    },
                    {
                        title: 'هشدار موجودی',
                        message: 'موجودی استخر کاهش یافت\n\nارز: USD\nموجودی فعلی: 5,000',
                        type: 'warning',
                        timestamp: new Date(),
                        data: {
                            currencyCode: 'USD',
                            currentBalance: 5000
                        }
                    },
                    {
                        title: 'اطلاع رسانی',
                        message: 'نرخ ارز بروزرسانی شد\n\nجفت ارز: USD/IRR\nنرخ جدید: 42,500',
                        type: 'info',
                        timestamp: new Date(),
                        data: {
                            currencyPair: 'USD/IRR',
                            newRate: 42500
                        }
                    }
                ];

                const randomNotification = testNotifications[Math.floor(Math.random() * testNotifications.length)];
                window.adminNotificationManager.showNotification(randomNotification);
            } else {
                alert('Notification manager not initialized');
            }
        }







    </script>
</body>

</html>
